{"version":3,"sources":["webpack:///aframe-altspace-component.min.js","webpack:///webpack/bootstrap f143f1bb1857a789e292","webpack:///./src/index.js","webpack:///./src/altspace-cursor-collider.js","webpack:///./src/altspace-tracked-controls.js","webpack:///./src/altspace.js","webpack:///./src/instantiator-system.js","webpack:///./src/instantiator.js","webpack:///./src/native-components.js","webpack:///./src/one-per-user.js","webpack:///./src/sync-color.js","webpack:///./src/sync-n-parent.js","webpack:///./src/sync-n-sound.js","webpack:///./src/sync-system.js","webpack:///./src/sync-transform.js","webpack:///./src/sync.js","webpack:///./src/wire.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","AFRAME","Error","setColliderFlag","obj","state","userData","altspace","collider","enabled","traverse","THREE","Mesh","registerComponent","schema","default","init","this","el","object3D","data","addEventListener","bind","update","gamepadIndex","trackedControlsSystem","document","querySelector","systems","systemGamepads","getGamepads","tick","controllers","length","window","components","hand","controller","setAttribute","version","usePixelScale","type","verticalAlign","enclosuresOnly","fullspace","Scene","inClient","initRenderer","initCursorEvents","initCollisionEvents","console","warn","t","dt","updateAllBehaviors","remove","pause","play","scene","getEnclosure","then","e","requestFullspace","scale","setScalar","pixelsPerMeter","position","y","innerHeight","innerDepth","renderer","render","effect","oldRenderer","getThreeJSRenderer","aframeComponentVersion","noop","setSize","setPixelRatio","setClearColor","clear","enableScissorTest","setScissor","setViewport","getPixelRatio","getMaxAnisotropy","setFaceCulling","context","canvas","shadowMap","cursorEl","emit","eventName","event","targetEl","target","ray","point","cursordownObj","uuid","addState","removeState","other","registerSystem","queuedInstantiations","initialized","syncSys","sceneEl","isConnected","initializeRef","instantiatedElementsRef","sceneRef","child","on","createElement","removeElement","processQueuedInstantiations","forEach","instantiationProps","clientId","groupName","push","instantiate","instantiatorId","mixin","parent","parentSelector","nodeName","removeLast","Promise","resolve","orderByKey","limitToLast","once","snapshot","hasChildren","ref","val","key","Object","keys","props","log","entityEl","dataset","appendChild","parentNode","removeChild","group","toggleExisting","onHandler","instantiateOrToggle","system","lastInstantiatorId","removeEventListener","meshInit","mesh","addNativeComponent","name","nativeComponentInit","getOrCreateObject3D","PlaceholderMesh","nativeComponentRemove","getObject3D","removeNativeComponent","nativeComponentUpdate","oldData","updateNativeComponent","object3DMap","callComponent","functionName","functionArguments","callNativeComponent","placeholderGeometry","BoxGeometry","placeholderMaterial","MeshBasicMaterial","color","visible","prototype","create","constructor","res","text","fontSize","width","height","horizontalAlign","isTrigger","center","radius","size","direction","_forEachMesh","func","childObj","_initObj","convex","component","detail","count","capacity","src","startsWith","location","origin","currPath","pathname","endsWith","split","slice","join","pauseSound","playSound","seek","time","playHandler","loop","volume","autoplay","oneshot","spatialBlend","pitch","minDistance","maxDistance","rolloff","part","side","index","userId","dependencies","instantiatorSys","start","colorRef","sync","dataRef","refChangedLocked","firstValue","newData","isMine","setTimeout","set","getUser","user","_start","getDataRef","propertyName","attributeRef","assign","sendEvent","sender","Date","now","soundEventRef","soundStateRef","sound","off","author","app","instance","refUrl","utilities","connect","authorId","appId","instanceId","baseRefUrl","connection","clientsRef","masterClientId","clientIds","masterClientKey","childSnapshot","joinedClientId","leftClientId","onDisconnect","shouldInitialize","defineProperty","get","onTransform","componentName","value","onComponentChanged","sendPosition","sendRotation","sendScale","throttle","wait","options","timeout","args","result","previous","later","leading","apply","throttled","remaining","arguments","clearTimeout","trailing","cancel","positionRef","rotationRef","scaleRef","updateRate","stoppedAnimations","children","i","tagName","toLowerCase","stop","animation","mode","ownOn","shouldTakeOwnership","ownerId","isMasterClient","takeOwnership","error","link","setupReceive","entityRef","ownerRef","transaction","owner","committed","newOwnerId","gained","lost","ownershipEvents","max","multiple","gain","lose","targets","actOnTargets","actOnTargetsIfStateMatches","act"],"mappings":"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","file":"aframe-altspace-component.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (typeof AFRAME === 'undefined') {\n\t  throw new Error('Component attempted to register before AFRAME was available.');\n\t}\n\t\n\t__webpack_require__(3);\n\t__webpack_require__(1);\n\t__webpack_require__(2);\n\t__webpack_require__(6);\n\t__webpack_require__(7);\n\t__webpack_require__(14);\n\t__webpack_require__(12);\n\t__webpack_require__(13);\n\t__webpack_require__(9);\n\t__webpack_require__(11);\n\t__webpack_require__(10);\n\t__webpack_require__(8);\n\t__webpack_require__(4);\n\t__webpack_require__(5);\n\t__webpack_require__(15);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t(function(){\n\t\n\t\tfunction setColliderFlag(obj, state) {\n\t\t\tobj.userData.altspace = {collider: {enabled: state}};\n\t\t\tobj.traverse(function (obj) {\n\t\t\t\tif (obj instanceof THREE.Mesh) {\n\t\t\t\t\tobj.userData.altspace = {collider: {enabled: state}};\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\n\t\t/**\n\t\t* Enable or disable cursor collision on the object.\n\t\t* @mixin altspace-cursor-collider\n\t\t* @memberof altspace\n\t\t* @prop {boolean} enabled=true - The state of the cursor collider.\n\t\t*/\n\t\tAFRAME.registerComponent('altspace-cursor-collider', {\n\t\t\tschema: { enabled: { default: true } },\n\t\t\tinit: function () {\n\t\t\t\tsetColliderFlag(this.el.object3D, this.data.enabled);\n\t\t\t\tthis.el.addEventListener('model-loaded', (function(){\n\t\t\t\t\tsetColliderFlag(this.el.object3D, this.data.enabled);\n\t\t\t\t}).bind(this));\n\t\t\t},\n\t\t\tupdate: function () {\n\t\t\t\tsetColliderFlag(this.el.object3D, this.data.enabled);\n\t\t\t}\n\t\t});\n\t\n\t})();\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Enables tracked control support for A-Frame applications that use the built-in\n\t* `tracked-controls`, `vive-controls` or `hand-controls` components.\n\t* @mixin altspace-tracked-controls\n\t* @memberof altspace\n\t*/\n\tAFRAME.registerComponent('altspace-tracked-controls', {\n\t  init: function () {\n\t\tthis.gamepadIndex = null;\n\t\tthis.trackedControlsSystem = document.querySelector('a-scene').systems['tracked-controls'];\n\t\tthis.systemGamepads = 0;\n\t\taltspace.getGamepads();\n\t  },\n\t  tick: function () {\n\t\t  if (\n\t\t\tthis.trackedControlsSystem &&\n\t\t\tthis.systemGamepads !== this.trackedControlsSystem.controllers.length &&\n\t\t\twindow.altspace && altspace.getGamepads && altspace.getGamepads().length\n\t\t  ) {\n\t\t\tvar components = this.el.components;\n\t\t\tif (components['paint-controls']) {\n\t\t\t  this.gamepadIndex = components['paint-controls'].data.hand === 'left' ? 2 : 1;\n\t\t\t}\n\t\t\tif (this.gamepadIndex === null && components['hand-controls']) {\n\t\t\t  this.gamepadIndex = components['hand-controls'].data === 'left' ? 2 : 1;\n\t\t\t}\n\t\t\tif (this.gamepadIndex === null && components['vive-controls']) {\n\t\t\t  this.gamepadIndex = components['vive-controls'].data.hand === 'left' ? 2 : 1;\n\t\t\t}\n\t\t\tif (this.gamepadIndex === null && components['tracked-controls']) {\n\t\t\t  this.gamepadIndex = components['tracked-controls'].data.controller;\n\t\t\t}\n\t\t\tthis.el.setAttribute('tracked-controls', 'id', altspace.getGamepads()[this.gamepadIndex].id);\n\t\t\tthis.el.setAttribute('tracked-controls', 'controller', 0);\n\t\t\tthis.systemGamepads = this.trackedControlsSystem.controllers.length;\n\t\t  }\n\t  }\n\t});\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t* @namespace altspace\n\t*/\n\t\n\t/**\n\t* The altspace component makes A-Frame apps compatible with AltspaceVR.\n\t*\n\t* **Note**: If you use the `embedded` A-Frame component on your scene, you must include it *before* the `altspace` component, or your app will silently fail.\n\t* @mixin altspace\n\t* @memberof altspace\n\t* @property {boolean} usePixelScale=`false` - Allows you to use A-Frame units as CSS pixels.\n\t* This is the default behavior for three.js apps, but not for A-Frame apps.\n\t* @property {string} verticalAlign=`middle` - Puts the origin at the `bottom`, `middle` (default),\n\t* or `top` of the Altspace enclosure.\n\t* @property {boolean} enclosuresOnly=`true` - Prevents the scene from being created if\n\t* enclosure is flat.\n\t* @property {boolean} fullspace=`false` - Puts the app into fullspace mode.\n\t*\n\t* @example\n\t* <head>\n\t*   <title>My A-Frame Scene</title>\n\t*   <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\n\t*   <script src=\"https://cdn.rawgit.com/AltspaceVR/aframe-altspace-component/v1.3.2/dist/aframe-altspace-component.min.js\"></script>\n\t* </head>\n\t* <body>\n\t*   <a-scene altspace>\n\t*     <a-entity geometry=\"primitive: box\" material=\"color: #C03546\"></a-entity>\n\t*   </a-scene>\n\t* </body>\n\t*/\n\tAFRAME.registerComponent('altspace', {\n\t  version: '1.3.2',\n\t  schema: {\n\t\tusePixelScale: { type: 'boolean', default: 'false'},\n\t\tverticalAlign: { type: 'string',  default: 'middle'},\n\t\tenclosuresOnly:{ type: 'boolean', default: 'true'},\n\t\tfullspace:     { type: 'boolean', default: 'false'}\n\t  },\n\t\n\t  /*\n\t   * Called once when component is attached. Generally for initial setup.\n\t   */\n\t  init: function () {\n\t\tif (!(this.el.object3D instanceof THREE.Scene)) {\n\t\t  console.warn('aframe-altspace-component can only be attached to a-scene');\n\t\t  return;\n\t\t}\n\t\n\t\tif (window.altspace && window.altspace.inClient) {\n\t\t  this.el.setAttribute('vr-mode-ui', {enabled: false});\n\t\t  this.initRenderer();\n\t\t  this.initCursorEvents();\n\t\t  this.initCollisionEvents();\n\t\t} else {\n\t\t  console.warn('aframe-altspace-component only works inside of AltspaceVR');\n\t\t}\n\t\n\t  },\n\t\n\t  /*\n\t   * Called on every single tick or render loop of the scene.\n\t   */\n\t  tick: function (t, dt) {\n\t      if(this.el.object3D.updateAllBehaviors)\n\t        this.el.object3D.updateAllBehaviors();\n\t  },\n\t\n\t  /*\n\t   * Called when a component is removed (e.g., via removeAttribute).\n\t   * Generally undoes all modifications to the entity.\n\t   */\n\t  remove: function () { },\n\t\n\t  /*\n\t   * Called on each scene tick.\n\t   */\n\t  // tick: function (t) { },\n\t\n\t  /*\n\t   * Called when entity pauses.\n\t   * Use to stop or remove any dynamic or background behavior such as events.\n\t   */\n\t  pause: function () { },\n\t\n\t  /*\n\t   * Called when entity resumes.\n\t   * Use to continue or add any dynamic or background behavior such as events.\n\t   */\n\t  play: function () { },\n\t\n\t\n\t  /********** Helper Methods **********/\n\t\n\t  /*\n\t   * Swap in Altspace renderer when running in AltspaceVR.\n\t   */\n\t  initRenderer: function () {\n\t\n\t\tvar scene = this.el.object3D;\n\t\taltspace.getEnclosure().then(function(e)\n\t\t{\n\t\t\tif(this.data.fullspace){\n\t\t\t\te.requestFullspace();\n\t\t\t\te.addEventListener('fullspacechange', function(){\n\t\t\t\t\tscene.scale.setScalar(e.pixelsPerMeter);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tif (!this.data.usePixelScale || this.data.fullspace){\n\t\t\t\tscene.scale.setScalar(e.pixelsPerMeter);\n\t\t\t}\n\t\n\t\t  switch (this.data.verticalAlign) {\n\t\t\tcase 'bottom':\n\t\t\t  scene.position.y -= e.innerHeight / 2;\n\t\t\t  break;\n\t\t\tcase 'top':\n\t\t\t  scene.position.y += e.innerHeight / 2;\n\t\t\t  break;\n\t\t\tcase 'middle':\n\t\t\t  break;\n\t\t\tdefault:\n\t\t\t  console.warn('Unexpected value for verticalAlign: ', this.data.verticalAlign);\n\t\t  }\n\t\n\t\t  if(this.data.enclosuresOnly && e.innerDepth === 1){\n\t\t\tthis.el.renderer.render(new THREE.Scene());\n\t\t\tthis.el.renderer = this.el.effect = oldRenderer;\n\t\n\t\t  }\n\t\t}.bind(this));\n\t\n\t\tvar oldRenderer = this.el.renderer;\n\t\tvar renderer = this.el.renderer = this.el.effect = altspace.getThreeJSRenderer({\n\t\t  aframeComponentVersion: this.version\n\t\t});\n\t\tvar noop = function() {};\n\t\trenderer.setSize = noop;\n\t\trenderer.setPixelRatio = noop;\n\t\trenderer.setClearColor = noop;\n\t\trenderer.clear = noop;\n\t\trenderer.enableScissorTest = noop;\n\t\trenderer.setScissor = noop;\n\t\trenderer.setViewport = noop;\n\t\trenderer.getPixelRatio = noop;\n\t\trenderer.getMaxAnisotropy = noop;\n\t\trenderer.setFaceCulling = noop;\n\t\trenderer.context = {canvas: {}};\n\t\trenderer.shadowMap = {};\n\t\n\t  },\n\t\n\t  /*\n\t   * Emulate A-Frame cursor events when running in altspaceVR.\n\t   */\n\t  initCursorEvents: function() {\n\t\n\t\tvar scene = this.el.object3D;\n\t\tvar cursorEl = document.querySelector('a-cursor') || document.querySelector('a-entity[cursor]');\n\t\tif (cursorEl) {\n\t\t  // Hide A-Frame cursor mesh.\n\t\t  cursorEl.setAttribute('material', 'transparent', true);\n\t\t  cursorEl.setAttribute('material', 'opacity', 0.0);\n\t\t}\n\t\n\t\tvar emit = function (eventName, event) {\n\t\t\t// Fire events on intersected object and A-Frame cursor.\n\t\t\tvar targetEl = event.target.el;\n\t\t\tif (cursorEl) cursorEl.emit(eventName, { target: targetEl, ray: event.ray, point: event.point });\n\t\t\tif (targetEl) targetEl.emit(eventName, { target: targetEl, ray: event.ray, point: event.point });\n\t\t} ;\n\t\n\t\tvar cursordownObj = null;\n\t\tscene.addEventListener('cursordown', function(event) {\n\t\t  cursordownObj = event.target;\n\t\t  emit('mousedown', event);\n\t\t});\n\t\n\t\tscene.addEventListener('cursorup', function(event) {\n\t\t  emit('mouseup', event);\n\t\t  if (event.target.uuid === cursordownObj.uuid) {\n\t\t\temit('click', event);\n\t\t  }\n\t\t  cursordownObj = null;\n\t\t});\n\t\n\t\tscene.addEventListener('cursorenter', function(event) {\n\t\t  if (!event.target.el) { return; }\n\t\t  event.target.el.addState('hovered');\n\t\t  if (cursorEl) cursorEl.addState('hovering');\n\t\t  emit('mouseenter', event);\n\t\t});\n\t\n\t\tscene.addEventListener('cursorleave', function(event) {\n\t\t  if (!event.target.el) { return; }\n\t\t  event.target.el.removeState('hovered');\n\t\t  if (cursorEl) cursorEl.removeState('hovering');\n\t\t  emit('mouseleave', event);\n\t\t});\n\t\n\t  },\n\t\n\t  initCollisionEvents: function () {\n\t\n\t\tvar scene = this.el.object3D;\n\t\n\t\tvar emit = function (eventName, event) {\n\t\t\tvar targetEl = event.target.el;\n\t\t\tif (!targetEl) return;\n\t\n\t\t\t//remap target and other from object3Ds to aframe element\n\t\t\tevent.target = targetEl;\n\t\t\tif (event.other && event.other.el) {\n\t\t\t\tevent.other = event.other.el;\n\t\t\t}\n\t\t\ttargetEl.emit(eventName, event);\n\t\t};\n\t\n\t\tscene.addEventListener('collisionenter', function (event) {\n\t\t\temit('collisionenter', event);\n\t\t});\n\t\n\t\tscene.addEventListener('collisionexit', function (event) {\n\t\t\temit('collisionexit', event);\n\t\t});\n\t\n\t\tscene.addEventListener('triggerenter', function (event) {\n\t\t\temit('triggerenter', event);\n\t\t});\n\t\n\t\tscene.addEventListener('triggerexit', function (event) {\n\t\t\temit('triggerexit', event);\n\t\t});\n\t\n\t  }\n\t\n\t});\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tAFRAME.registerSystem('instantiator', {\n\t\tinit: function () {\n\t\t\tthis.queuedInstantiations = [];\n\t\t\tthis.initialized = false;\n\t\t\tvar syncSys = this.sceneEl.systems['sync-system'];\n\t\t\tif (syncSys && syncSys.isConnected) {\n\t\t\t\tthis.initializeRef();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.sceneEl.addEventListener('connected', this.initializeRef.bind(this));\n\t\t\t}\n\t\t},\n\t\tinitializeRef: function () {\n\t\t\tthis.syncSys = this.sceneEl.systems['sync-system'];\n\t\t\tthis.instantiatedElementsRef = this.syncSys.sceneRef.child('instantiatedElements')\n\t\t\tthis.instantiatedElementsRef.on('child_added', this.createElement.bind(this));\n\t\t\tthis.instantiatedElementsRef.on('child_removed', this.removeElement.bind(this));\n\t\t\tthis.initialized = true;\n\t\t\tthis.processQueuedInstantiations();\n\t\t},\n\t\tprocessQueuedInstantiations: function () {\n\t\t\tthis.queuedInstantiations.forEach(function (instantiationProps) {\n\t\t\t\tinstantiationProps.clientId = this.syncSys.clientId;\n\t\t\t\tthis.instantiatedElementsRef.child(instantiationProps.groupName).push(instantiationProps);\n\t\t\t}.bind(this));\n\t\t\tthis.queuedInstantiations.length = 0;\n\t\t},\n\t\tinstantiate: function (instantiatorId, groupName, mixin, parent) {\n\t\t\t// Bit of a hack since we need to pass a string to instantiate() and this.stringify doesn't \n\t\t\t// return a proper selector for a-scene.\n\t\t\tvar parentSelector = parent.nodeName === 'A-SCENE' ? 'a-scene' : '#' + parent.id;\n\t\t\tvar instantiationProps = {\n\t\t\t\tinstantiatorId: instantiatorId,\n\t\t\t\tgroupName: groupName,\n\t\t\t\tmixin: mixin,\n\t\t\t\tparent: parentSelector\n\t\t\t};\n\t\t\tthis.queuedInstantiations.push(instantiationProps);\n\t\t\tif (this.initialized) {\n\t\t\t\tthis.processQueuedInstantiations();\n\t\t\t}\n\t\t},\n\t\tremoveLast: function (groupName) {\n\t\t\treturn new Promise(function (resolve) {\n\t\t\t\tthis.instantiatedElementsRef.child(groupName).orderByKey().limitToLast(1).once('value', function (snapshot) {\n\t\t\t\t\tif (!snapshot.hasChildren()) { resolve(); return; }\n\t\n\t\t\t\t\tvar ref = snapshot.ref();\n\t\t\t\t\tref.once('value', function () {\n\t\t\t\t\t\tvar val = snapshot.val();\n\t\t\t\t\t\tvar key = Object.keys(val)[0];\n\t\t\t\t\t\tvar props = val[key];\n\t\t\t\t\t\tresolve(props.instantiatorId);\n\t\t\t\t\t});\n\t\t\t\t\tref.remove();\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t},\n\t\tcreateElement: function (snapshot) {\n\t\t\tvar val = snapshot.val();\n\t\t\tvar key = Object.keys(val)[0];\n\t\t\tconsole.log('BPDEBUG createElement', key);\n\t\t\tvar props = val[key];\n\t\t\tvar entityEl = document.createElement('a-entity');\n\t\t\tentityEl.id = props.groupName + '-instance-' + key;\n\t\t\tentityEl.dataset.instantiatorId = props.instantiatorId;\n\t\t\tdocument.querySelector(props.parent).appendChild(entityEl);\n\t\t\tentityEl.setAttribute('mixin', props.mixin);\n\t\t},\n\t\tremoveElement: function (snapshot) {\n\t\t\tvar val = snapshot.val();\n\t\t\tvar key = Object.keys(val)[0];\n\t\t\tvar props = val[key];\n\t\t\tvar id = props.groupName + '-instance-' + key;\n\t\t\tvar el = document.querySelector('#' + id);\n\t\t\tel.parentNode.removeChild(el);\n\t\t}\n\t});\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Instantiates objects on an event trigger and adds them to the scene. The instantiated objects are built using\n\t* the specified mixins.\n\t* @mixin instantiator\n\t* @prop {string} on - An event that triggers the instantiation\n\t* @prop {string} mixin - A space-separated list of mixins that should be used to instantiate the object.\n\t* @prop {string} parent='a-scene' - A selector that determines which object the instantiated object will be added to.\n\t* @prop {string} group='main' - An identifier which can be used to group instantiated objects.\n\t*/\n\tAFRAME.registerComponent('instantiator', {\n\t\tschema: {\n\t\t\ton: {type: 'string'},\n\t\t\tmixin: {type: 'string'},\n\t\t\tparent: {type: 'selector', default: 'a-scene'},\n\t\t\tgroup: {type: 'string', default: 'main'},\n\t\t\tremoveLast: {type: 'boolean', default: 'true'},\n\t\t\ttoggleExisting: {type: 'boolean', default: 'true'}\n\t\t},\n\t\tinit: function () {\n\t\t\tthis.onHandler = this.instantiateOrToggle.bind(this);\n\t\t\tthis.el.addEventListener(this.data.on, this.onHandler);\n\t\t},\n\t\tinstantiateOrToggle: function () {\n\t\t\tthis.system.removeLast(this.data.group).then(function (lastInstantiatorId) {\n\t\t\t\tif (lastInstantiatorId !== this.el.id) {\n\t\t\t\t\tthis.system.instantiate(this.el.id, this.data.group, this.data.mixin, this.data.parent)\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.el.removeEventListener(this.data.on, this.onHandler);\n\t\t}\n\t});\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t* This set of components map to various objects and effects that are provided\n\t* natively by AltspaceVR. Your management of these objects may be limited to\n\t* some degree, but they will tend to be more performant than SDK equivalents,\n\t* or may provide some functionality not otherwise available to the SDK.\n\t* @namespace native\n\t*/\n\t(function () {\n\t\tif (!window.altspace || !altspace.inClient) {\n\t\t\tvar noop = function () {};\n\t\t\twindow.altspace = {\n\t\t\t\taddNativeComponent: noop,\n\t\t\t\tupdateNativeComponent: noop,\n\t\t\t\tremoveNativeComponent: noop\n\t\t\t};\n\t\t}\n\t\n\t\tvar placeholderGeometry = new THREE.BoxGeometry(0.001, 0.001, 0.001);\n\t\tvar placeholderMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\n\t\tplaceholderMaterial.visible = false;\n\t\tvar PlaceholderMesh = function () {\n\t\t\tTHREE.Mesh.call( this, placeholderGeometry, placeholderMaterial );\n\t\t};\n\t\tPlaceholderMesh.prototype = Object.create( THREE.Mesh.prototype );\n\t\tPlaceholderMesh.prototype.constructor = THREE.PlaceholderMesh;\n\t\n\t\tfunction meshInit(mesh) {\n\t\t\t//If you attach native components to an entity, it will not use a default collider\n\t\t\tmesh.userData.altspace = mesh.userData.altspace || {};\n\t\t\tmesh.userData.altspace.collider = mesh.userData.altspace.collider || {};\n\t\t\tmesh.userData.altspace.collider.enabled = false;\n\t\n\t\t\taltspace.addNativeComponent(mesh, this.name);\n\t\t}\n\t\n\t\tfunction nativeComponentInit() {\n\t\t\tvar mesh = this.el.getOrCreateObject3D('mesh', PlaceholderMesh);\n\t\n\t\t\tmeshInit.call(this, mesh);\n\t\n\t\t\t//to pass defaults\n\t\t\tthis.update(this.data);\n\t\t}\n\t\tfunction nativeComponentRemove() {\n\t\t\tvar mesh = this.el.getObject3D('mesh');\n\t\t\taltspace.removeNativeComponent(mesh, this.name);\n\t\t}\n\t\tfunction nativeComponentUpdate(oldData) {\n\t\t\taltspace.updateNativeComponent(this.el.object3DMap.mesh, this.name, this.data);\n\t\t}\n\t\n\t\tfunction callComponent(functionName, functionArguments) {\n\t\t\taltspace.callNativeComponent(this.el.object3DMap.mesh, this.name, functionName, functionArguments)\n\t\t}\n\t\n\t\t/**\n\t\t* Attach a given native object to this entity.\n\t\t* @mixin n-object\n\t\t* @memberof native\n\t\t* @prop {string} res - The identifier for the resource you want. This component\n\t\t* can accept all resources except for `interactables`.\n\t\t* @example <a-entity n-object='res:architecture/wall-4w-4h'></a-entity>\n\t\t*/\n\t\tAFRAME.registerComponent('n-object', {\n\t\t\tschema: {\n\t\t\t\tres: {type: 'string'}\n\t\t\t},\n\t\t\tinit: nativeComponentInit,\n\t\t\tupdate: nativeComponentUpdate,\n\t\t\tremove: nativeComponentRemove\n\t\t});\n\t\n\t\t/**\n\t\t* Create an object that spawns additional copies of itself when grabbed by a user (the copies are not spawners themselves).\n\t\t* These copies will be physically interactive and automatically synchronized\n\t\t* between users.\n\t\t* @mixin n-spawner\n\t\t* @memberof native\n\t\t* @prop {string} res - The identifier for the resource you want. This component\n\t\t* can only accept resources of type `interactables`.\n\t\t* @example <a-entity n-spawner='res: interactables/basketball'></a-entity>\n\t\t*/\n\t\tAFRAME.registerComponent('n-spawner', {\n\t\t\tschema: {\n\t\t\t\tres: {type: 'string'}\n\t\t\t},\n\t\t\tinit: nativeComponentInit,\n\t\t\tupdate: nativeComponentUpdate,\n\t\t\tremove: nativeComponentRemove\n\t\t});\n\t\n\t\t/**\n\t\t* Creates dynamic 2D text on the entity. The text will wrap automatically based on the width and height provided.\n\t\t* This text will be clearer than texture-based text and more performant than geometry-based test.\n\t\t* @mixin n-text\n\t\t* @memberof native\n\t\t* @prop {string} text - The text to be drawn.\n\t\t* @prop {number} fontSize=10 - The height of the letters. 10pt ~= 1m\n\t\t* @prop {number} width=10 - The width of the text area in meters. If the\n\t\t* text is wider than this value, the overflow will be wrapped to the next line.\n\t\t* @prop {number} height=1 - The height of the text area in meters. If the\n\t\t* text is taller than this value, the overflow will be cut off.\n\t\t* @prop {string} horizontalAlign=middle - The horizontal anchor point for\n\t\t* the text. Can be `left`, `middle`, or `right`.\n\t\t* @prop {string} verticalAlign=middle - The vertical anchor point for the\n\t\t* text. Can be `top`, `middle`, or `bottom`.\n\t\t*/\n\t\tAFRAME.registerComponent('n-text', {\n\t\t\tinit: nativeComponentInit,\n\t\t\tupdate: nativeComponentUpdate,\n\t\t\tremove: nativeComponentRemove,\n\t\t\tschema: {\n\t\t\t\ttext: { default: '', type: 'string' },\n\t\t\t\t/*color: { default: 'white',\n\t\t\t\t\tparse: function(value) {\n\t\t\t\t\t\treturn parseFloat(value, 10);\n\t\t\t\t\t},\n\t\t\t\t\tstringify: function(value) {\n\t\t\t\t\t\treturn value.toString();\n\t\t\t\t\t}},*/\n\t\t\t\tfontSize: { default: '10', type: 'int' },//roughly a meter tall\n\t\t\t\twidth: { default: '10', type: 'number' },//in meters\n\t\t\t\theight: { default: '1', type: 'number' },//in meters\n\t\t\t\thorizontalAlign: { default: 'middle'},\n\t\t\t\tverticalAlign: { default: 'middle'}\n\t\t\t}\n\t\t});\n\t\n\t\t//object: collides against: objects / enviroment / cursor\n\t\t//environment: can be teleported onto, and collides against: objects / environment / cursor\n\t\t//hologram: collides against: cursor / holograms\n\t\n\t\t/**\n\t\t* Abstract base class for {@link n.n-sphere-collider}, {@link n.n-box-collider},\n\t\t* {@link n.n-capsule-collider}, and {@link n.n-mesh-collider}. You cannot use\n\t\t* this class directly, but instead you should add one of those components\n\t\t* to your objects.\n\t\t* @name n-collider\n\t\t* @mixin n-collider\n\t\t* @memberof native\n\t\t* @prop {vec3} center=0,0,0 - The offset of the collider in local space.\n\t\t* @prop {string} type=hologram - The type of collider, one of: `object` | `environment` | `hologram`.\n\t\t* Object colliders collide with other objects, the environment, and the cursor.\n\t\t* Environment colliders collide with everything objects do, but you can also\n\t\t* teleport onto them. Hologram colliders only collide with other holograms and\n\t\t* the cursor.\n\t\t*/\n\t\n\t\t/**\n\t\t* Create a spherical collider on this entity.\n\t\t* @mixin n-sphere-collider\n\t\t* @memberof native\n\t\t* @extends native.n-collider\n\t\t* @prop {number} radius=1 - The size of the collider in meters.\n\t\t*/\n\t\tAFRAME.registerComponent('n-sphere-collider', {\n\t\t\tinit:nativeComponentInit,\n\t\t\tremove: nativeComponentRemove,\n\t\t\tupdate: nativeComponentUpdate,\n\t\t\tschema: {\n\t\t\t\tisTrigger: { default: false, type: 'boolean' },\n\t\t\t\tcenter: { type: 'vec3' },\n\t\t\t\tradius: { default: '0', type: 'number' },\n\t\t\t\ttype: {default: 'object'}\n\t\t\t}\n\t\t});\n\t\n\t\n\t\t/**\n\t\t* Create a box-shaped collider on this entity.\n\t\t* @mixin n-box-collider\n\t\t* @memberof native\n\t\t* @extends native.n-collider\n\t\t* @prop {vec3} size=1,1,1 - The dimensions of the collider.\n\t\t*/\n\t\tAFRAME.registerComponent('n-box-collider', {\n\t\t\tinit:nativeComponentInit,\n\t\t\tremove: nativeComponentRemove,\n\t\t\tupdate: nativeComponentUpdate,\n\t\t\tschema: {\n\t\t\t\tisTrigger: { default: false, type: 'boolean' },\n\t\t\t\tcenter: { type: 'vec3' },\n\t\t\t\tsize: { type: 'vec3' },\n\t\t\t\ttype: {default: 'object'}\n\t\t\t}\n\t\t});\n\t\n\t\t/**\n\t\t* Create a capsule-shaped collider on this entity. Capsules\n\t\t* are a union of a cylinder and two spheres on top and bottom.\n\t\t* @mixin n-capsule-collider\n\t\t* @memberof native\n\t\t* @extends native.n-collider\n\t\t* @prop {number} radius=1 - The radius of the capsule in meters.\n\t\t* @prop {number} height=1 - The height of the shaft of the capsule in meters.\n\t\t* @prop {string} direction=y - The axis with which the capsule is aligned.\n\t\t* One of `x`, `y`, or `z`.\n\t\t*/\n\t\tAFRAME.registerComponent('n-capsule-collider', {\n\t\t\tinit:nativeComponentInit,\n\t\t\tremove: nativeComponentRemove,\n\t\t\tupdate: nativeComponentUpdate,\n\t\t\tschema: {\n\t\t\t\tisTrigger: { default: false, type: 'boolean' },\n\t\t\t\tcenter: { type: 'vec3' },\n\t\t\t\tradius: { default: '0', type: 'number' },\n\t\t\t\theight: { default: '0', type: 'number' },\n\t\t\t\tdirection: { default: 'y' },\n\t\t\t\ttype: {default: 'object'}\n\t\t\t}\n\t\t});\n\t\n\t\t/**\n\t\t* Enable collision for the entire attached mesh. This is expensive to evaluate, so should only be used on\n\t\t* low-poly meshes.\n\t\t* @mixin n-mesh-collider\n\t\t* @memberof native\n\t\t* @extends native.n-collider\n\t\t* @example <a-box n-mesh-collider></a-box>\n\t\t* @prop {bool} convex=true - Whether the collider should be convex or concave. Set this to false if you have holes\n\t\t* in your mesh. Convex colliders are limited to 255 triangles. Note: concave colliders can be significantly more\n\t\t* expensive comparet to conves colliders.\n\t\t*/\n\t\tAFRAME.registerComponent('n-mesh-collider', {\n\t\t\t_forEachMesh: function (func) {\n\t\t\t\tvar obj = this.el.object3DMap.mesh;\n\t\t\t\tif (!obj) { return; }\n\t\t\t\tif (obj instanceof THREE.Mesh) {\n\t\t\t\t\tfunc(obj);\n\t\t\t\t}\n\t\t\t\tobj.traverse(function (childObj) {\n\t\t\t\t\tif (childObj instanceof THREE.Mesh) {\n\t\t\t\t\t\tfunc(childObj);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\t\t\t},\n\t\t\t_initObj: function () {\n\t\t\t\tthis._forEachMesh(function (mesh) {\n\t\t\t\t\tmeshInit.call(this, mesh);\n\t\n\t\t\t\t\t//to pass defaults\n\t\t\t\t\taltspace.updateNativeComponent(mesh, this.name, this.data);\n\t\t\t\t}.bind(this));\n\t\t\t},\n\t\t\tinit: function () {\n\t\t\t\t// Allow a-frame to create a PlaceholderMesh if there isn't already one, so that the native collider is\n\t\t\t\t// registered.\n\t\t\t\tthis.el.getOrCreateObject3D('mesh', PlaceholderMesh);\n\t\n\t\t\t\t// Initialize the existing mesh\n\t\t\t\tthis._initObj();\n\t\n\t\t\t\tthis.el.addEventListener('model-loaded', function () {\n\t\t\t\t\t// Re-initialize the collider if a new model is loaded\n\t\t\t\t\tthis._initObj();\n\t\t\t\t}.bind(this));\n\t\t\t},\n\t\t\tremove: function () {\n\t\t\t\tthis._forEachMesh(function (mesh) {\n\t\t\t\t\taltspace.removeNativeComponent(mesh, this.name);\n\t\t\t\t}.bind(this));\n\t\t\t},\n\t\t\tupdate: function (oldData) {\n\t\t\t\tthis._forEachMesh(function (mesh) {\n\t\t\t\t\taltspace.updateNativeComponent(mesh, this.name, this.data);\n\t\t\t\t}.bind(this));\n\t\t\t},\n\t\t\tschema: {\n\t\t\t\tisTrigger: { default: false, type: 'boolean' },\n\t\t\t\tconvex: { default: true, type: 'boolean' },\n\t\t\t\ttype: {default: 'object'}\n\t\t\t}\n\t\t});\n\t\n\t\t/**\n\t\t* Make the object's +Z always face the viewer. Currently will only directly apply to main mesh or native component on the attached entity, not any children or submeshes.\n\t\t* @mixin n-billboard\n\t\t* @memberof native\n\t\t* @example <a-plane n-billboard></a-plane>\n\t\t*/\n\t\tAFRAME.registerComponent('n-billboard', {\n\t\t\tinit:nativeComponentInit,\n\t\t\tremove: nativeComponentRemove,\n\t\t});\n\t\n\t\t/**\n\t\t* A container keeps a running tally of how many objects are within\n\t\t* its bounds, and adds and removes the states `container-full` and\n\t\t* `container-empty` based on the current count of objects. Can fire three\n\t\t* special events: `container-full`, `container-empty`, and `container-count-changed`.\n\t\t* @mixin n-container\n\t\t* @memberof native\n\t\t* @prop {number} capacity=4 - The value at which the container will fire the\n\t\t* `container-full` event.\n\t\t*/\n\t\tAFRAME.registerComponent('n-container', {\n\t\t\tinit: function(){\n\t\t\t\tnativeComponentInit.call(this);\n\t\n\t\t\t\tvar el = this.el;\n\t\t\t\tvar component = this;\n\t\n\t\t\t\tel.addEventListener('stateadded', function(event){\n\t\t\t\t\tif(event.detail.state === 'container-full'){\n\t\t\t\t\t\tel.emit('container-full');\n\t\t\t\t\t}\n\t\t\t\t\tif(event.detail.state === 'container-empty'){\n\t\t\t\t\t\tel.emit('container-empty');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tel.addEventListener('container-count-changed', function(event){\n\t\t\t\t\tcomponent.count = event.detail.count;\n\t\t\t\t});\n\t\t\t},\n\t\t\tremove: nativeComponentRemove,\n\t\t\tupdate: nativeComponentUpdate,\n\t\t\tschema: {\n\t\t\t\tcapacity: { default: 4, type: 'number' },\n\t\t\t}\n\t\t});\n\t\n\t\t/**\n\t\t* Play the sound given by the `src` or `res` property from the location\n\t\t* of the entity.\n\t\t* @mixin n-sound\n\t\t* @memberof native\n\t\t* @prop {string} res - The resource identifier for a built-in sound clip.\n\t\t* @prop {string} src - A URL to an external sound clip. The sound can be in WAV, OGG or MP3 format. However. only\n\t\t* WAV is supported on all platforms. MP3 is supported on Gear VR and OGG is supported on desktop.\n\t\t* @prop {string} on - The name of the event that will play this sound clip.\n\t\t* @prop {boolean} loop=false - Tells the clip to loop back to the beginning of the clip\n\t\t* once it's finished.\n\t\t* @prop {boolean} autoplay=false - Tells the clip to start automatically when\n\t\t* the scene loads, instead of waiting for `playSound()`.\n\t\t* @prop {boolean} oneshot=false - Tells the clip to clean itself up when it\n\t\t* finishes playing. Allows for overlapping instances of the sound.\n\t\t* @prop {number} volume=1 - The volume of the clip, from [0,1].\n\t\t* @prop {number} spatialBlend=1 - How spatialized a sound is, from [0,1].\n\t\t* A value of 1 will be fully localized, and the sound will pan left and\n\t\t* right as you turn your head. A value of 0 makes it non-spatialized, and\n\t\t* it will always be heard in both ears.\n\t\t* @prop {number} pitch=1 - The speed multiplier for the sound. 0.5 is one\n\t\t* octave down, and 2 is one octave up.\n\t\t* @prop {number} minDistance=1 - Inside this distance in meters,\n\t\t* the sound volume is at full volume.\n\t\t* @prop {number} maxDistance=12 - If rolloff is 'logarithmic', the sound will stop attenuating at this distance.\n\t\t* If rolloff is 'linear' or 'cosine', the sound will be silent at this distance.\n\t\t* @prop {string} rolloff='logarithmic' - Set this to 'linear' or 'cosine' if you want to cut sounds off at a\n\t\t* maxDistance.\n\t\t*/\n\t\t/**\n\t\t* Fired when a sound has loaded and is ready to be played\n\t\t* @event native.n-sound#n-sound-loaded\n\t\t*/\n\t\tAFRAME.registerComponent('n-sound', {\n\t\t\tinit: function () {\n\t\t\t\tvar src = this.data.src;\n\t\t\t\tif (src && !src.startsWith('http')) {\n\t\t\t\t\tif (src.startsWith('/')) {\n\t\t\t\t\t\tthis.data.src = location.origin + src;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar currPath = location.pathname;\n\t\t\t\t\t\tif (!currPath.endsWith('/')) {\n\t\t\t\t\t\t\tcurrPath = location.pathname.split('/').slice(0, -1).join('/') + '/';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.data.src = location.origin + currPath + src;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnativeComponentInit.call(this);\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t* Stop the playing sound, and preserve position in clip.\n\t\t\t* @method native.n-sound#pauseSound\n\t\t\t*/\n\t\t\tpauseSound: function () {\n\t\t\t\tcallComponent.call(this, 'pause');\n\t\t\t\tthis.el.emit('sound-paused');\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t* Start the sound playing.\n\t\t\t* @method native.n-sound#playSound\n\t\t\t*/\n\t\t\tplaySound: function () {\n\t\t\t\tcallComponent.call(this, 'play');\n\t\t\t\tthis.el.emit('sound-played');\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t* Jump to a position in the clip.\n\t\t\t* @method native.n-sound#seek\n\t\t\t* @param {number} time - The time in milliseconds to jump to.\n\t\t\t*/\n\t\t\tseek: function (time) {\n\t\t\t\tcallComponent.call(this, 'seek', {time: time});\n\t\t\t},\n\t\t\tremove: function () {\n\t\t\t\tnativeComponentRemove.call(this);\n\t\t\t\tif (this.playHandler) {\n\t\t\t\t  this.el.removeEventListener(oldData.on, this.playHandler);\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate: function (oldData) {\n\t\t\t\tnativeComponentUpdate.call(this, oldData);\n\t\t\t\tif (this.playHandler) {\n\t\t\t\t  this.el.removeEventListener(oldData.on, this.playHandler);\n\t\t\t\t}\n\t\t\t\tif (this.data.on) {\n\t\t\t\t  this.playHandler = this.playSound.bind(this);\n\t\t\t\t  this.el.addEventListener(this.data.on, this.playHandler);\n\t\t\t\t}\n\t\t\t},\n\t\t\tschema: {\n\t\t\t\ton: { type: 'string' },\n\t\t\t\tres: { type: 'string' },\n\t\t\t\tsrc: { type: 'string' },\n\t\t\t\tloop: { type: 'boolean' },\n\t\t\t\tvolume: { type: 'number', default: 1 },\n\t\t\t\tautoplay: { type: 'boolean' },\n\t\t\t\toneshot: { type: 'boolean' },\n\t\t\t\tspatialBlend: { type: 'float', default: 1 },\n\t\t\t\tpitch: { type: 'float', default: 1 },\n\t\t\t\tminDistance: { type: 'float', default: 1 },\n\t\t\t\tmaxDistance: { type: 'float', default: 12 },\n\t\t\t\trolloff: { type: 'string', default: 'logarithmic' },\n\t\t\t}\n\t\t});\n\t\n\t\tAFRAME.registerComponent('n-skeleton-parent', {\n\t\t\tschema: {\n\t\t\t\tpart: {type: 'string'},\n\t\t\t\tside: {type: 'string', default: 'center'},\n\t\t\t\tindex: {type: 'int', default: 0},\n\t\t\t\tuserId: {type: 'string'}\n\t\t\t},\n\t\t\tinit: nativeComponentInit,\n\t\t\tupdate: nativeComponentUpdate,\n\t\t\tremove: nativeComponentRemove\n\t\t});\n\t\n\t\tAFRAME.registerComponent('n-cockpit-parent', {\n\t\t\tinit: nativeComponentInit,\n\t\t\tremove: nativeComponentRemove\n\t\t});\n\t\n\t\n\t})();\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// this file is just for good measure. didn't want native-components getting too cluttered.\n\t\n\t/**\n\t* This namespace describes strings that are valid inputs to the various native\n\t* components. Some components can only take certain types of resources, i.e.\n\t* {@link n.n-spawner} can only accept `interactables`.\n\t* @namespace resources\n\t* @example <a-entity n-object='res: architecture/ceiling-2w-2l'></a-entity>\n\t*/\n\t\n\t/**\n\t* Generic modular building pieces. All pieces are aligned to one corner, such that\n\t* the piece extends out toward -X and +Z.\n\t* @name architecture\n\t* @enum architecture\n\t* @memberof resources\n\t*\n\t* @prop architecture/ceiling-2w-2l\n\t* @prop architecture/ceiling-4w-4l\n\t* @prop architecture/ceiling-4w-4l\n\t* @prop architecture/ceiling-skylight-4w-4l\n\t* @prop architecture/ceiling-skylight-corner-2w-2l\n\t* @prop architecture/ceiling-skylight-edge-2w\n\t* @prop architecture/ceiling-skylight-edge-4w\n\t* @prop architecture/ceiling-skylight-filler-4w-4l-2\n\t* @prop architecture/ceiling-skylight-filler-4w-4l\n\t* @prop architecture/ceiling-slice-concave-2r\n\t* @prop architecture/ceiling-slice-concave-4r\n\t* @prop architecture/ceiling-slice-convex-2r\n\t* @prop architecture/ceiling-slice-convex-4r\n\t* @prop architecture/door-4w-4h\n\t* @prop architecture/floor-2w-2l\n\t* @prop architecture/floor-2w-4l\n\t* @prop architecture/floor-4w-2l\n\t* @prop architecture/floor-4w-4l\n\t* @prop architecture/floor-slice-concave-2r\n\t* @prop architecture/floor-slice-concave-4r\n\t* @prop architecture/floor-slice-convex-2r\n\t* @prop architecture/floor-slice-convex-4r\n\t* @prop architecture/railing-2l\n\t* @prop architecture/railing-4l\n\t* @prop architecture/railing-curve-concave-2r\n\t* @prop architecture/wall-2w-4h\n\t* @prop architecture/wall-4w-4h\n\t* @prop architecture/wall-base-2w\n\t* @prop architecture/wall-base-4w\n\t* @prop architecture/wall-base-curve-concave-2r\n\t* @prop architecture/wall-base-curve-concave-4r\n\t* @prop architecture/wall-base-curve-convex-2r\n\t* @prop architecture/wall-base-curve-convex-4r\n\t* @prop architecture/wall-bulkhead-2w\n\t* @prop architecture/wall-bulkhead-4w\n\t* @prop architecture/wall-bulkhead-curve-concave-2r\n\t* @prop architecture/wall-bulkhead-curve-concave-4r\n\t* @prop architecture/wall-bulkhead-curve-convex-2r\n\t* @prop architecture/wall-bulkhead-curve-convex-4r\n\t* @prop architecture/wall-curve-concave-2r-4h\n\t* @prop architecture/wall-curve-concave-4r-4h\n\t* @prop architecture/wall-curve-convex-2r-4h\n\t* @prop architecture/wall-curve-convex-4r-4h\n\t* @prop architecture/wall-curve-window-concave-4r-4h\n\t* @prop architecture/wall-curve-window-concave-filler-4r-4h\n\t* @prop architecture/wall-curve-window-gap-concave-4r-4h\n\t* @prop architecture/wall-curve-window-gap-end-l-concave-4r-4h\n\t* @prop architecture/wall-curve-window-gap-end-r-concave-4r-4h\n\t* @prop architecture/wall-filler-corner-inner-4h\n\t* @prop architecture/wall-filler-corner-outer-4h\n\t* @prop architecture/wall-window-4w-4h\n\t* @prop architecture/wall-window-filler-2\n\t* @prop architecture/wall-window-gap-2w-4h\n\t* @prop architecture/wall-window-gap-4w-4h\n\t* @prop architecture/wall-window-gap-end-l-2w-4h\n\t* @prop architecture/wall-window-gap-end-l-4w-4h\n\t* @prop architecture/wall-window-gap-end-r-2w-4h\n\t* @prop architecture/wall-window-gap-end-r-4w-4h\n\t*/\n\t\n\t/**\n\t* Particle systems and other native effects\n\t* @name effects\n\t* @enum effects\n\t* @memberof resources\n\t*\n\t* @prop effects/explosion - A particle system with a central flash, then debris flying outward.\n\t* This is a non-looping effect.\n\t* @prop effects/fire - An animated fire particle, suitable for a torch.\n\t* @prop effects/fire-trail - Fire that trails the entity through space as it moves. Only is visible while an object is in motion\n\t* @prop effects/fireworks - A compound particle system that shoots up from the entity,\n\t* explodes into colored sparks, then transitions to gold streamers.\n\t* @prop effects/smoke - Billowing smoke particle system.\n\t* @prop effects/sparkler - Emits sparks in all directions\n\t* @prop effects/steam - Small white steam rising upwards\n\t*/\n\t\n\t/**\n\t* Objects that can be picked up, thrown, and otherwise interacted with.\n\t* @name interactables\n\t* @enum interactables\n\t* @memberof resources\n\t*\n\t* @prop interactables/basketball\n\t* @prop interactables/bowlingball\n\t* @prop interactables/bowling-pin\n\t* @prop interactables/box\n\t* @prop interactables/coin\n\t* @prop interactables/gem\n\t* @prop interactables/ring\n\t* @prop interactables/soccerball\n\t*/\n\t\n\t/**\n\t* Static models that you can place in your scene.\n\t* @name objects\n\t* @enum objects\n\t* @memberof resources\n\t*\n\t* @prop objects/basketball-hoop\n\t* @prop objects/coin\n\t* @prop objects/cup\n\t* @prop objects/gem\n\t* @prop objects/hoop\n\t* @prop objects/ring\n\t* @prop objects/target-archery\n\t*/\n\t\n\t/**\n\t* A selection of pipes/chutes/etc.\n\t* @name pipes\n\t* @enum pipes\n\t* @memberof resources\n\t*\n\t* @prop pipes/pipe-full-cap-1d\n\t* @prop pipes/pipe-full-cross-1d\n\t* @prop pipes/pipe-full-elbow-1d\n\t* @prop pipes/pipe-full-fork-1d\n\t* @prop pipes/pipe-full-straight-1d-1l\n\t* @prop pipes/pipe-full-straight-1d-2l\n\t* @prop pipes/pipe-full-straight-1d-4l\n\t* @prop pipes/pipe-full-tee-1d\n\t* @prop pipes/pipe-half-cap-1d\n\t* @prop pipes/pipe-half-cross-1d\n\t* @prop pipes/pipe-half-elbow-1d\n\t* @prop pipes/pipe-half-fork-1d\n\t* @prop pipes/pipe-half-straight-1d-1l\n\t* @prop pipes/pipe-half-straight-1d-2l\n\t* @prop pipes/pipe-half-straight-1d-4l\n\t* @prop pipes/pipe-half-tee-1d\n\t*/\n\t\n\t/**\n\t* Common UI sounds can be used for a consistent UI experience.\n\t* @name sounds-ui\n\t* @enum sounds-ui\n\t* @memberof resources\n\t*\n\t* @prop ui/select\n\t* @prop ui/toggle\n\t* @prop ui/notify\n\t* @prop ui/error\n\t* @prop ui/complete\n\t* @prop ui/succeed\n\t* @prop ui/over\n\t* @prop ui/join\n\t* @prop ui/click\n\t*/\n\t\n\t/**\n\t* Foley sounds are real sounds designed for tangible, touchable objects as they are heard in the real world.\n\t* @name sounds-foley\n\t* @enum sounds-foley\n\t* @memberof resources\n\t*\n\t* @prop foley/metal-scrape\n\t* @prop foley/metal-clack\n\t* @prop foley/metal-rattle\n\t* @prop foley/coin-jingle\n\t* @prop foley/paper-shuffle\n\t* @prop foley/explode\n\t*/\n\t\n\t/**\n\t* Effect sounds for a variety of use cases.\n\t* @name sounds-effects\n\t* @enum sounds-effects\n\t* @memberof resources\n\t*\n\t* @prop effects/fanfare-succeed - The \"success!\" sound from Holograms Against Humanity.\n\t* @prop effects/fanfare-start - The \"Game has started!\" sound from HaH.\n\t* @prop effects/fanfare-fail\n\t* @prop effects/timer-10s - a 10 second timer that triggers a bell at exactly 10 seconds.\n\t* The bell lasts for 2 seconds. This allows for timer length changes.\n\t* @prop effects/gain-coin\n\t*/\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tAFRAME.registerComponent('one-per-user', {\n\t\tdependencies: ['sync'],\n\t\tschema: {\n\t\t\tmixin: {type: 'string'},\n\t\t\tparent: {type: 'selector', default: 'a-scene'}\n\t\t},\n\t\tinit: function () {\n\t\t\t/*\n\t\t\tthis.syncSys = scene.systems['sync-system'];\n\t\t\tthis.sync = this.el.components.sync;\n\t\t\taltspace.getUser().then(function (user) {\n\t\t\t\tthis.userId = user.userId;\n\t\t\t\tif(this.syncSys.isConnected) { this._start(); }\n\t\t\t\telse { scene.addEventListener('connected', this._start.bind(this)); }\n\t\t\t}.bind(this));\n\t\t   */\n\t\t\tvar scene = document.querySelector('a-scene');\n\t\t\tthis.instantiatorSys = scene.systems['instantiator'];\n\t\t\tthis.instantiatorSys.instantiate(this.el.id, this.el.id, this.data.mixin, this.data.parent)\n\t\t\tconsole.log('BPDEBUG instantiated one-per-user');\n\t\t}\n\t});\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Sync the color property of the object between clients.\n\t* Requires both a {@link sync.sync-system} component on the `a-scene`, and a\n\t* {@link sync.sync} component on the target entity.\n\t* @mixin sync-color\n\t* @memberof sync\n\t*/\n\tAFRAME.registerComponent('sync-color',\n\t{\n\t\tdependencies: ['sync'],\n\t\tschema: {\n\t\t},\n\t\tinit: function () {\n\t\t\tvar component = this;\n\t\t\tvar sync = component.el.components.sync;\n\t\t\tif(sync.isConnected) start(); else component.el.addEventListener('connected', start);\n\t\n\t\t\tfunction start(){\n\t\t\t\tvar colorRef = sync.dataRef.child('material/color');\n\t\n\t\t\t\tvar refChangedLocked = false;\n\t\n\t\t\t\tvar firstValue = true;\n\t\n\t\t\t\tcomponent.el.addEventListener('componentchanged', function (event) {\n\t\t\t\t\tvar name = event.detail.name;\n\t\t\t\t\tvar oldData = event.detail.oldData;\n\t\t\t\t\tvar newData = event.detail.newData;\n\t\n\t\t\t\t\tif (name !== 'material') return;\n\t\t\t\t\tif (refChangedLocked) return;\n\t\n\t\t\t\t\tif (oldData.color !== newData.color) {\n\t\t\t\t\t\tif(sync.isMine){\n\t\t\t\t\t\t\tsetTimeout(function() {//For some reason A-Frame has a misconfigured material reference if we do this too early\n\t\t\t\t\t\t\t\tcolorRef.set(newData.color);\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tcolorRef.on('value', function (snapshot) {\n\t\t\t\t\tif (sync.isMine && !firstValue) return;\n\t\t\t\t\tvar color = snapshot.val();\n\t\n\t\t\t\t\trefChangedLocked = true;\n\t\t\t\t\tcomponent.el.setAttribute('material', 'color', color);\n\t\t\t\t\trefChangedLocked = false;\n\t\n\t\t\t\t\tfirstValue = false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tAFRAME.registerComponent('sync-n-parent', {\n\t\tdependencies: ['sync'],\n\t\tinit: function () {\n\t\t\tvar scene = document.querySelector('a-scene');\n\t\t\tthis.syncSys = scene.systems['sync-system'];\n\t\t\tthis.sync = this.el.components.sync;\n\t\t\taltspace.getUser().then(function (user) {\n\t\t\t\tthis.userId = user.userId;\n\t\t\t\tif(this.syncSys.isConnected) { this._start(); }\n\t\t\t\telse { scene.addEventListener('connected', this._start.bind(this)); }\n\t\t\t}.bind(this));\n\t\t},\n\t\tgetDataRef: function (propertyName) {\n\t\t\treturn this.sync.dataRef.child('n-skeleton-parent/' + propertyName);\n\t\t},\n\t\t_start: function () {\n\t\t\tthis.attributeRef = this.sync.dataRef.child('n-skeleton-parent');\n\t\t\tthis.attributeRef.on('value', function (snapshot) {\n\t\t\t\tvar val = snapshot.val();\n\t\t\t\tif (!val) { return; }\n\t\t\t\tconsole.log('BPDEBUG setAttribute', val);\n\t\t\t\tthis.el.setAttribute('n-skeleton-parent', val);\n\t\t\t}.bind(this));\n\t\n\t\t\t// immediately sync this entity's parent userId to the owner's\n\t\t\tif (this.sync.isMine) {\n\t\t\t\tconsole.log('BPDEBUG isMine', this.userId);\n\t\t\t\tthis.attributeRef.set(Object.assign(\n\t\t\t\t\t{}, this.el.components['n-skeleton-parent'].data, {userId: this.userId}));\n\t\t\t}\n\t\t\tthis.el.addEventListener('componentchanged', function (event) {\n\t\t\t\tif (!this.sync.isMine) return;\n\t\t\t\tvar name = event.detail.name;\n\t\t\t\tif (name === 'n-skeleton-parent') {\n\t\t\t\t\tconsole.log('BPDEBUG newData', event.detail.newData);\n\t\t\t\t\tthis.attributeRef.set(event.detail.newData);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\n\t\t\tthis.el.addEventListener('ownershipgained', function () {\n\t\t\t\tthis.attributeRef.set(Object.assign(\n\t\t\t\t\t{}, this.el.components['n-skeleton-parent'].data, {userId: this.userId}));\n\t\t\t}.bind(this));\n\t\t}\n\t});\n\t\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Synchronize the playback state of an {@link n.n-sound} component between clients.\n\t* Requires both a {@link sync.sync-system} component on the `a-scene`, and a\n\t* {@link sync.sync} component on the target entity.\n\t* @mixin sync-n-sound\n\t* @memberof sync\n\t*/\n\tAFRAME.registerComponent('sync-n-sound',\n\t{\n\t\tdependencies: ['sync'],\n\t\tschema: { },\n\t\tinit: function () {\n\t\t\tvar component = this;\n\t\t\tvar sync = component.el.components.sync;\n\t\t\tvar scene = document.querySelector('a-scene');\n\t\t\tvar syncSys = scene.systems['sync-system'];\n\t\t\tif(sync.isConnected) start(); else component.el.addEventListener('connected', start);\n\t\n\t\t\tfunction start(){\n\t\t\t\tcomponent.soundStateRef = sync.dataRef.child('sound/state');\n\t\t\t\tcomponent.soundEventRef = sync.dataRef.child('sound/event');\n\t\n\t\t\t\tfunction sendEvent(event) {\n\t\t\t\t\tif (!sync.isMine) return;\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\ttype: event.type,\n\t\t\t\t\t\tsender: syncSys.clientId,\n\t\t\t\t\t\tel: component.el.id,\n\t\t\t\t\t\ttime: Date.now()\n\t\t\t\t\t};\n\t\t\t\t\tcomponent.soundEventRef.set(event);\n\t\t\t\t}\n\t\n\t\t\t\tcomponent.el.addEventListener('sound-played', sendEvent);\n\t\t\t\tcomponent.el.addEventListener('sound-paused', sendEvent);\n\t\n\t\t\t\tcomponent.soundEventRef.on('value', function (snapshot) {\n\t\t\t\t\tif (sync.isMine) return;\n\t\t\t\t\tvar event = snapshot.val();\n\t\t\t\t\tif (!event) return;\n\t\t\t\t\tif (event.el === component.el.id) {\n\t\t\t\t\t\tvar sound = component.el.components['n-sound'];\n\t\t\t\t\t\tif (event.type === 'sound-played') {\n\t\t\t\t\t\t\tsound.playSound();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsound.pauseSound();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tcomponent.el.addEventListener('componentchanged', function (event) {\n\t\t\t\t\tif (!sync.isMine) return;\n\t\t\t\t\tvar name = event.detail.name;\n\t\t\t\t\tif (name !== 'n-sound') return;\n\t\t\t\t\tcomponent.soundStateRef.set(event.detail.newData);\n\t\t\t\t});\n\t\n\t\t\t\tcomponent.soundStateRef.on('value', function (snapshot) {\n\t\t\t\t\tif (sync.isMine) return;\n\t\t\t\t\tvar state = snapshot.val();\n\t\t\t\t\tif (!state) return;\n\t\t\t\t\tcomponent.el.setAttribute('n-sound', state);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.soundStateRef.off('value');\n\t\t\tthis.soundEventRef.off('value');\n\t\t}\n\t});\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Connect to a remote Firebase server, and facilitate synchronization. These\n\t* options correspond exactly with the configuration options for\n\t* [altspace.utilities.sync.connect]{@link http://altspacevr.github.io/AltspaceSDK/doc/module-altspace_utilities_sync.html#.connect}.\n\t* This component must be present on `a-scene` for any other sync components to work.\n\t* @memberof sync\n\t* @mixin sync-system\n\t* @prop {string} author - A unique identifier for you or your organization.\n\t* @prop {string} app - The name of the app.\n\t* @prop {string} refUrl - Override the base reference. Set this to use your own Firebase.\n\t* @prop {string} instance - Override the instance ID. Can also be overridden with\n\t* a URL parameter.\n\t*/\n\tAFRAME.registerSystem('sync-system',\n\t{\n\t\tschema: {\n\t\t\tauthor: { type: 'string', default: null },\n\t\t\tapp: { type: 'string', default: null },\n\t\t\tinstance: { type: 'string', default: null },\n\t\t\trefUrl: { type: 'string', default: null }\n\t\t},\n\t\tinit: function() {\n\t\t\tvar system = this;\n\t\n\t\t\tif(!this.data || !this.data.app){\n\t\t\t\tconsole.warn('The sync-system must be present on the scene and configured with required data.');\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tsystem.isConnected = false;\n\t\t\tconsole.log(this.data);\n\t\t\taltspace.utilities.sync.connect({\n\t\t\t\tauthorId: this.data.author,\n\t\t\t\tappId: this.data.app,\n\t\t\t\tinstanceId: this.data.instance,\n\t\t\t\tbaseRefUrl: this.data.refUrl\n\t\t\t}).then(function(connection) {\n\t\t\t\tthis.connection = connection;\n\t\n\t\t\t\tthis.sceneRef = this.connection.instance.child('scene');\n\t\t\t\tthis.clientsRef = this.connection.instance.child('clients');\n\t\n\t\t\t\t// temporary way of having unique identifiers for each client\n\t\t\t\tthis.clientId = this.sceneEl.object3D.uuid;\n\t\t\t\tconsole.log('BPDEBUG clientId', this.clientId);\n\t\t\t\tvar masterClientId;\n\t\t\t\tthis.clientsRef.on(\"value\", function (snapshot) {\n\t\t\t\t\tvar clientIds = snapshot.val();\n\t\n\t\t\t\t\tvar masterClientKey = Object.keys(clientIds)[0];\n\t\t\t\t\tmasterClientId = clientIds[masterClientKey];\n\t\t\t\t});\n\t\n\t\t\t\tthis.clientsRef.on('child_added', function(childSnapshot) {\n\t\t\t\t\tvar joinedClientId = childSnapshot.val();\n\t\t\t\t\t//let the master client flag get set first\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tsystem.sceneEl.emit('clientjoined', {id: joinedClientId}, false);\n\t\t\t\t\t}, 0);\n\t\t\t\t});\n\t\n\t\t\t\tthis.clientsRef.on('child_removed', function(childSnapshot) {\n\t\t\t\t\tvar leftClientId = childSnapshot.val();\n\t\t\t\t\t//let the master client flag get set first\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tsystem.sceneEl.emit('clientleft', {id: leftClientId}, false);\n\t\t\t\t\t}, 0);\n\t\t\t\t});\n\t\n\t\t\t\t// add our client ID to the list of connected clients,\n\t\t\t\t// but have it be automatically removed by firebase if we disconnect for any reason\n\t\t\t\tthis.clientsRef.push(this.clientId).onDisconnect().remove();\n\t\n\t\t\t\tthis.connection.instance.child('initialized').once('value', function (snapshot) {\n\t\t\t\t\tvar shouldInitialize = !snapshot.val();\n\t\t\t\t\tsnapshot.ref().set(true);\n\t\n\t\t\t\t\tsystem.sceneEl.emit('connected', { shouldInitialize: shouldInitialize }, false);\n\t\t\t\t\tsystem.isConnected = true;\n\t\t\t\t}.bind(this));\n\t\n\t\n\t\t\t\tObject.defineProperty(this, 'isMasterClient', {\n\t\t\t\t\tget: function () { return masterClientId === this.clientId; }.bind(this)\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t},\n\t});\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t//TODO: We need to figure out a way to recieve our first update without caring about ownership.\n\t// firstValue is probably not the right way to go, probably something about having sent yet. Need to change for both\n\t\n\t/**\n\t* Synchronize the position, rotation, and scale of this object with all clients.\n\t* Requires both a {@link sync.sync-system} component on the `a-scene`, and a\n\t* {@link sync.sync} component on the target entity.\n\t* @mixin sync-transform\n\t* @memberof sync\n\t*/\n\tAFRAME.registerComponent('sync-transform',\n\t{\n\t\tdependencies: ['sync'],\n\t\tschema: {\n\t\t},\n\t\tinit: function () {\n\t\t\tvar component = this;\n\t\t\tvar sync = component.el.components.sync;\n\t\t\tif(sync.isConnected) start(); else component.el.addEventListener('connected', start);\n\t\n\t\t\tfunction start(){\n\t\n\t\t\t\tvar positionRef = sync.dataRef.child('position');\n\t\t\t\tvar rotationRef = sync.dataRef.child('rotation');\n\t\t\t\tvar scaleRef = sync.dataRef.child('scale');\n\t\n\t\t\t\tcomponent.updateRate = 100;\n\t\n\t\t\t\tvar stoppedAnimations = [];\n\t\t\t\t//pause all animations on ownership loss\n\t\t\t\tcomponent.el.addEventListener('ownershiplost', function() {\n\t\t\t\t\tvar children = component.el.children;\n\t\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\t\tvar tagName = children[i].tagName.toLowerCase();\n\t\t\t\t\t\tif (tagName === \"a-animation\") {\n\t\t\t\t\t\t\tstoppedAnimations.push(children[i]);\n\t\t\t\t\t\t\tchildren[i].stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tcomponent.el.addEventListener('ownershipgained', function () {\n\t\t\t\t\tfor (var i = 0; i < stoppedAnimations.length; i++) {\n\t\t\t\t\t\tvar animation = stoppedAnimations[i];\n\t\t\t\t\t\tanimation.start();\n\t\t\t\t\t}\n\t\t\t\t\tstoppedAnimations = [];\n\t\t\t\t});\n\t\n\t\t\t\tfunction onTransform(snapshot, componentName) {\n\t\t\t\t\tif (sync.isMine) return;\n\t\n\t\t\t\t\tvar value = snapshot.val();\n\t\t\t\t\tif (!value) return;\n\t\n\t\t\t\t\tcomponent.el.setAttribute(componentName, value);\n\t\t\t\t}\n\t\n\t\t\t\tpositionRef.on('value', function (snapshot) {\n\t\t\t\t\tonTransform(snapshot, 'position');\n\t\t\t\t});\n\t\n\t\t\t\trotationRef.on('value', function (snapshot) {\n\t\t\t\t\tonTransform(snapshot, 'rotation');\n\t\t\t\t});\n\t\n\t\t\t\tscaleRef.on('value', function (snapshot) {\n\t\t\t\t\tonTransform(snapshot, 'scale');\n\t\t\t\t});\n\t\n\t\t\t\tvar sendPosition = throttle(function(value){\n\t\t\t\t\tpositionRef.set(value);\n\t\t\t\t}, component.updateRate);\n\t\n\t\t\t\tvar sendRotation = throttle(function(value){\n\t\t\t\t\trotationRef.set(value);\n\t\t\t\t}, component.updateRate);\n\t\n\t\t\t\tvar sendScale = throttle(function(value){\n\t\t\t\t\tscaleRef.set(value);\n\t\t\t\t}, component.updateRate);\n\t\n\t\t\t\tfunction onComponentChanged(event){\n\t\t\t\t\tif (!sync.isMine) return;\n\t\n\t\t\t\t\tvar name = event.detail.name;\n\t\t\t\t\tvar newData = event.detail.newData;\n\t\n\t\t\t\t\tif (name === 'position') {\n\t\t\t\t\t\tsendPosition(newData);\n\t\t\t\t\t} else if (name === 'rotation') {\n\t\t\t\t\t\tsendRotation(newData);\n\t\t\t\t\t} else if (name === 'scale') {\n\t\t\t\t\t\tsendScale(newData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t//from underscore.js\n\t\t\t\tfunction throttle(func, wait, options) {\n\t\t\t\t\tvar timeout, context, args, result;\n\t\t\t\t\tvar previous = 0;\n\t\t\t\t\tif (!options) options = {};\n\t\n\t\t\t\t\tvar later = function() {\n\t\t\t\t\t  previous = options.leading === false ? 0 : Date.now();\n\t\t\t\t\t  timeout = null;\n\t\t\t\t\t  result = func.apply(context, args);\n\t\t\t\t\t  if (!timeout) context = args = null;\n\t\t\t\t\t};\n\t\n\t\t\t\t\tvar throttled = function() {\n\t\t\t\t\t  var now = Date.now();\n\t\t\t\t\t  if (!previous && options.leading === false) previous = now;\n\t\t\t\t\t  var remaining = wait - (now - previous);\n\t\t\t\t\t  context = this;\n\t\t\t\t\t  args = arguments;\n\t\t\t\t\t  if (remaining <= 0 || remaining > wait) {\n\t\t\t\t\t\tif (timeout) {\n\t\t\t\t\t\t  clearTimeout(timeout);\n\t\t\t\t\t\t  timeout = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevious = now;\n\t\t\t\t\t\tresult = func.apply(context, args);\n\t\t\t\t\t\tif (!timeout) context = args = null;\n\t\t\t\t\t  } else if (!timeout && options.trailing !== false) {\n\t\t\t\t\t\ttimeout = setTimeout(later, remaining);\n\t\t\t\t\t  }\n\t\t\t\t\t  return result;\n\t\t\t\t\t};\n\t\n\t\t\t\t\tthrottled.cancel = function() {\n\t\t\t\t\t  clearTimeout(timeout);\n\t\t\t\t\t  previous = 0;\n\t\t\t\t\t  timeout = context = args = null;\n\t\t\t\t\t};\n\t\n\t\t\t\t\treturn throttled;\n\t\t\t\t  };\n\t\n\t\n\t\t\t\tcomponent.el.addEventListener('componentchanged', onComponentChanged);\n\t\t\t}\n\t\t}\n\t});\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Enables the synchronization of properties of entities. All property sync components\n\t* require both a {@link sync.sync-system} on `a-scene`, and a {@link sync.sync}\n\t* on the entity to be synced.\n\t* @name sync\n\t* @namespace sync\n\t* @example\n\t* <a-scene sync-system='app: example sync; author: altspacevr'>\n\t*   <a-entity sync='ownOn: cursordown' sync-color></a-entity>\n\t* </a-scene>\n\t*/\n\t\n\t\n\t\n\t/**\n\t* Enables the synchronization of properties of the entity. Must be used in\n\t* conjuction with the {@link sync.sync-system} component and a component for a\n\t* specific property (e.g. {@link sync.sync-transform}).\n\t* @memberof sync\n\t* @mixin sync\n\t* @prop {string} ownOn - The name of the event, or a list of events, that\n\t* will cause the local client to take ownership of this object. This field\n\t* cannot be updated after initialization.\n\t*/\n\tAFRAME.registerComponent('sync',\n\t{\n\t\tschema: {\n\t\t\tmode: { default: 'link' },\n\t\t\townOn: { type: 'string' } //cannot be changed after creation\n\t\t},\n\t\tinit: function () {\n\t\t\tvar scene = document.querySelector('a-scene');\n\t\t\tvar syncSys = scene.systems['sync-system'];\n\t\n\t\t\tvar ref;\n\t\t\tvar dataRef;\n\t\t\tvar ownerRef;\n\t\t\tvar ownerId;\n\t\t\tvar isMine = false;\n\t\n\t\t\tvar component = this;\n\t\n\t\t\tcomponent.isConnected = false;\n\t\n\t\t\tif(syncSys.isConnected) start(); else scene.addEventListener('connected', start);\n\t\n\t\n\t\t\tif(component.data.ownOn)\n\t\t\t{\n\t\t\t\tvar ownershipEvents = component.data.ownOn.split(/[ ,]+/);\n\t\t\t\tfor(var i = 0, max = ownershipEvents.length; i < max; i++){\n\t\t\t\t\tcomponent.el.addEventListener(ownershipEvents[i], function(){\n\t\t\t\t\t\tif(component.isConnected){\n\t\t\t\t\t\t\tcomponent.takeOwnership();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction start(){\n\t\t\t\t//Make sure someone always owns an object. If the owner leaves and we are the master client, we will take it.\n\t\t\t\t//This ensures, for example, that synced animations keep playing\n\t\t\t\tscene.addEventListener('clientleft', function(event){\n\t\t\t\t\tvar shouldTakeOwnership = (!ownerId || ownerId === event.detail.id) && syncSys.isMasterClient;\n\t\n\t\t\t\t\tif(shouldTakeOwnership) component.takeOwnership();\n\t\t\t\t});\n\t\n\t\t\t\tif (component.data.mode === 'link') {\n\t\t\t\t\tvar id = component.el.id;\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\tconsole.error('Entities cannot be synced using link mode without an id.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tconsole.log('syncSys: ' + syncSys);\n\t\t\t\t\tconsole.log('syncSys.sceneRef: ' + syncSys.sceneRef);\n\t\n\t\t\t\t\tlink(syncSys.sceneRef.child(id));\n\t\t\t\t\tsetupReceive();\n\t\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Unsupported sync mode: ' + component.data.mode);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tcomponent.isConnected = true;\n\t\t\t\tcomponent.el.emit('connected', null, false);\n\t\t\t}\n\t\n\t\t\tfunction link(entityRef) {\n\t\t\t\tref = entityRef;\n\t\t\t\tdataRef = ref.child('data');\n\t\t\t\tcomponent.dataRef = dataRef;\n\t\t\t\townerRef = ref.child('owner');\n\t\t\t}\n\t\n\t\t\tfunction setupReceive() {\n\t\n\t\t\t\t//if nobody has owned the object yet, we will.\n\t\t\t\townerRef.transaction(function (owner) {\n\t\t\t\t\tconsole.log('BPDEBUG ownerRef transaction', owner, syncSys.clientId);\n\t\t\t\t\tif (owner) return undefined;\n\t\n\t\t\t\t\townerRef.onDisconnect().set(null);\n\t\t\t\t\treturn syncSys.clientId;\n\t\t\t\t}, function (error, committed, snapshot) {\n\t\t\t\t\t// Return since transaction will be called again\n\t\t\t\t\tif (!committed) { return; }\n\t\t\t\t\townerRef.on('value', function(snapshot) {\n\t\t\t\t\t\tvar newOwnerId = snapshot.val();\n\t\t\t\t\t\tconsole.log('BPDEBUG ownerRef', newOwnerId);\n\t\n\t\t\t\t\t\tvar gained = newOwnerId === syncSys.clientId && !isMine;\n\t\t\t\t\t\tif (gained) component.el.emit('ownershipgained', null, false);\n\t\n\t\n\t\t\t\t\t\t//note this also fires when we start up without ownership\n\t\t\t\t\t\tvar lost = newOwnerId !== syncSys.clientId && isMine;\n\t\t\t\t\t\tif (lost){\n\t\t\t\t\t\t\tcomponent.el.emit('ownershiplost', null, false);\n\t\n\t\t\t\t\t\t\t//we no longer have to clear our ownership when we disconnect\n\t\t\t\t\t\t\townerRef.onDisconnect().cancel();\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\townerId = newOwnerId;\n\t\n\t\t\t\t\t\tisMine = newOwnerId === syncSys.clientId;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\n\t\t\t* Tell sync to start pushing local property values instead of updating\n\t\t\t* local from remote values.\n\t\t\t* @method sync.sync#takeOwnership\n\t\t\t*/\n\t\t\tcomponent.takeOwnership = function() {\n\t\t\t\tconsole.log('BPDEBUG takeOwnership', syncSys.clientId);\n\t\t\t\townerRef.set(syncSys.clientId);\n\t\n\t\t\t\t//clear our ownership if we disconnect\n\t\t\t\t//this is needed if we are the last user in the room, but we expect people to join later\n\t\t\t\townerRef.onDisconnect().set(null);\n\t\t\t}\n\t\n\t\t\t/**\n\t\t\t* Indicates whether the sync ownership is yours.\n\t\t\t* @member sync.sync#isMine\n\t\t\t* @readonly\n\t\t\t*/\n\t\t\tObject.defineProperty(component, 'isMine', {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn isMine;//TODO: Should this be state instead?\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The wire component allows you to trigger an event on another entity when an event occurs on an entity\n\t * @mixin wire\n\t * @property {string} on Name of an event to listen to\n\t * @property {string} gained Name of a state to watch for\n\t * @property {string} lost Name of a state to watch for\n\t * @property {string} emit Name of an event to trigger on the targets\n\t * @property {string} gain Name of a state to add on the target\n\t * @property {string} lose Name of a state to remove on the target\n\t * @property {selector} targets A selector to pick which objects to wire to\n\t * @property {selector} target - A selector to pick a single object to wire to\n\t **/\n\tAFRAME.registerComponent('wire',\n\t{\n\t\tmultiple: true,\n\t\tschema: {\n\t\t\ton: {type: 'string'},\n\t\t\temit: {type: 'string'},\n\t\t\tgained: {type: 'string'},\n\t\t\tlost: {type: 'string'},\n\t\t\tgain: {type: 'string'},\n\t\t\tlose: {type: 'string'},\n\t\t\ttargets: {type: 'selectorAll'},\n\t\t\ttarget: {type: 'selector'}\n\t\t},\n\t\tupdate: function (oldData) {\n\t\t\tif (oldData.on) {\n\t\t\t\tthis.el.removeEventListener(oldData.on, this.actOnTargets);\n\t\t\t}\n\t\t\tif (oldData.gained) {\n\t\t\t\tthis.el.removeEventListener('stateadded', this.actOnTargetsIfStateMatches);\n\t\t\t}\n\t\t\tif (oldData.lost) {\n\t\t\t\tthis.el.removeEventListener('stateremoved', this.actOnTargetsIfStateMatches);\n\t\t\t}\n\t\n\t\t\tthis.actOnTargets = function () {\n\t\t\t\tfunction act(el) {\n\t\t\t\t\tif (this.data.emit) {\n\t\t\t\t\t\tel.emit(this.data.emit);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.data.gain) {\n\t\t\t\t\t\tel.addState(this.data.gain);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.data.lose) {\n\t\t\t\t\t\tel.removeState(this.data.lose);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this.data.targets) this.data.targets.forEach(act.bind(this));\n\t\t\t\tif(this.data.target) act.call(this, this.data.target);\n\t\t\t}.bind(this);\n\t\n\t\t\tthis.actOnTargetsIfStateMatches = function (event) {\n\t\t\t\tvar state = event.detail.state;\n\t\t\t\tif (state === this.data.gained || state === this.data.lost) {\n\t\t\t\t\tthis.actOnTargets();\n\t\t\t\t}\n\t\t\t}.bind(this);\n\t\n\t\t\tif (this.data.on) {\n\t\t\t\tthis.el.addEventListener(this.data.on, this.actOnTargets);\n\t\t\t}\n\t\t\tif (this.data.gained) {\n\t\t\t\tthis.el.addEventListener('stateadded', this.actOnTargetsIfStateMatches);\n\t\t\t}\n\t\t\tif (this.data.lost) {\n\t\t\t\tthis.el.addEventListener('stateremoved', this.actOnTargetsIfStateMatches);\n\t\t\t}\n\t\t},\n\t\tremove: function () {\n\t\t\tthis.el.removeEventListener(this.data.on, this.actOnTargets);\n\t\t\tthis.el.removeEventListener('stateadded', this.actOnTargetsIfStateMatches);\n\t\t\tthis.el.removeEventListener('stateremoved', this.actOnTargetsIfStateMatches);\n\t\t}\n\t});\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** aframe-altspace-component.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f143f1bb1857a789e292\n **/","if (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.');\n}\n\nrequire('./altspace');\nrequire('./altspace-cursor-collider');\nrequire('./altspace-tracked-controls');\nrequire('./native-components');\nrequire('./native-resources');\nrequire('./sync');\nrequire('./sync-system');\nrequire('./sync-transform');\nrequire('./sync-color');\nrequire('./sync-n-sound');\nrequire('./sync-n-parent');\nrequire('./one-per-user');\nrequire('./instantiator-system');\nrequire('./instantiator');\nrequire('./wire');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","(function(){\n\n\tfunction setColliderFlag(obj, state) {\n\t\tobj.userData.altspace = {collider: {enabled: state}};\n\t\tobj.traverse(function (obj) {\n\t\t\tif (obj instanceof THREE.Mesh) {\n\t\t\t\tobj.userData.altspace = {collider: {enabled: state}};\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t* Enable or disable cursor collision on the object.\n\t* @mixin altspace-cursor-collider\n\t* @memberof altspace\n\t* @prop {boolean} enabled=true - The state of the cursor collider.\n\t*/\n\tAFRAME.registerComponent('altspace-cursor-collider', {\n\t\tschema: { enabled: { default: true } },\n\t\tinit: function () {\n\t\t\tsetColliderFlag(this.el.object3D, this.data.enabled);\n\t\t\tthis.el.addEventListener('model-loaded', (function(){\n\t\t\t\tsetColliderFlag(this.el.object3D, this.data.enabled);\n\t\t\t}).bind(this));\n\t\t},\n\t\tupdate: function () {\n\t\t\tsetColliderFlag(this.el.object3D, this.data.enabled);\n\t\t}\n\t});\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/altspace-cursor-collider.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n* Enables tracked control support for A-Frame applications that use the built-in\n* `tracked-controls`, `vive-controls` or `hand-controls` components.\n* @mixin altspace-tracked-controls\n* @memberof altspace\n*/\nAFRAME.registerComponent('altspace-tracked-controls', {\n  init: function () {\n\tthis.gamepadIndex = null;\n\tthis.trackedControlsSystem = document.querySelector('a-scene').systems['tracked-controls'];\n\tthis.systemGamepads = 0;\n\taltspace.getGamepads();\n  },\n  tick: function () {\n\t  if (\n\t\tthis.trackedControlsSystem &&\n\t\tthis.systemGamepads !== this.trackedControlsSystem.controllers.length &&\n\t\twindow.altspace && altspace.getGamepads && altspace.getGamepads().length\n\t  ) {\n\t\tvar components = this.el.components;\n\t\tif (components['paint-controls']) {\n\t\t  this.gamepadIndex = components['paint-controls'].data.hand === 'left' ? 2 : 1;\n\t\t}\n\t\tif (this.gamepadIndex === null && components['hand-controls']) {\n\t\t  this.gamepadIndex = components['hand-controls'].data === 'left' ? 2 : 1;\n\t\t}\n\t\tif (this.gamepadIndex === null && components['vive-controls']) {\n\t\t  this.gamepadIndex = components['vive-controls'].data.hand === 'left' ? 2 : 1;\n\t\t}\n\t\tif (this.gamepadIndex === null && components['tracked-controls']) {\n\t\t  this.gamepadIndex = components['tracked-controls'].data.controller;\n\t\t}\n\t\tthis.el.setAttribute('tracked-controls', 'id', altspace.getGamepads()[this.gamepadIndex].id);\n\t\tthis.el.setAttribute('tracked-controls', 'controller', 0);\n\t\tthis.systemGamepads = this.trackedControlsSystem.controllers.length;\n\t  }\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/altspace-tracked-controls.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n* @namespace altspace\n*/\n\n/**\n* The altspace component makes A-Frame apps compatible with AltspaceVR.\n*\n* **Note**: If you use the `embedded` A-Frame component on your scene, you must include it *before* the `altspace` component, or your app will silently fail.\n* @mixin altspace\n* @memberof altspace\n* @property {boolean} usePixelScale=`false` - Allows you to use A-Frame units as CSS pixels.\n* This is the default behavior for three.js apps, but not for A-Frame apps.\n* @property {string} verticalAlign=`middle` - Puts the origin at the `bottom`, `middle` (default),\n* or `top` of the Altspace enclosure.\n* @property {boolean} enclosuresOnly=`true` - Prevents the scene from being created if\n* enclosure is flat.\n* @property {boolean} fullspace=`false` - Puts the app into fullspace mode.\n*\n* @example\n* <head>\n*   <title>My A-Frame Scene</title>\n*   <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\n*   <script src=\"https://cdn.rawgit.com/AltspaceVR/aframe-altspace-component/v1.3.2/dist/aframe-altspace-component.min.js\"></script>\n* </head>\n* <body>\n*   <a-scene altspace>\n*     <a-entity geometry=\"primitive: box\" material=\"color: #C03546\"></a-entity>\n*   </a-scene>\n* </body>\n*/\nAFRAME.registerComponent('altspace', {\n  version: '1.3.2',\n  schema: {\n\tusePixelScale: { type: 'boolean', default: 'false'},\n\tverticalAlign: { type: 'string',  default: 'middle'},\n\tenclosuresOnly:{ type: 'boolean', default: 'true'},\n\tfullspace:     { type: 'boolean', default: 'false'}\n  },\n\n  /*\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function () {\n\tif (!(this.el.object3D instanceof THREE.Scene)) {\n\t  console.warn('aframe-altspace-component can only be attached to a-scene');\n\t  return;\n\t}\n\n\tif (window.altspace && window.altspace.inClient) {\n\t  this.el.setAttribute('vr-mode-ui', {enabled: false});\n\t  this.initRenderer();\n\t  this.initCursorEvents();\n\t  this.initCollisionEvents();\n\t} else {\n\t  console.warn('aframe-altspace-component only works inside of AltspaceVR');\n\t}\n\n  },\n\n  /*\n   * Called on every single tick or render loop of the scene.\n   */\n  tick: function (t, dt) {\n      if(this.el.object3D.updateAllBehaviors)\n        this.el.object3D.updateAllBehaviors();\n  },\n\n  /*\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () { },\n\n  /*\n   * Called on each scene tick.\n   */\n  // tick: function (t) { },\n\n  /*\n   * Called when entity pauses.\n   * Use to stop or remove any dynamic or background behavior such as events.\n   */\n  pause: function () { },\n\n  /*\n   * Called when entity resumes.\n   * Use to continue or add any dynamic or background behavior such as events.\n   */\n  play: function () { },\n\n\n  /********** Helper Methods **********/\n\n  /*\n   * Swap in Altspace renderer when running in AltspaceVR.\n   */\n  initRenderer: function () {\n\n\tvar scene = this.el.object3D;\n\taltspace.getEnclosure().then(function(e)\n\t{\n\t\tif(this.data.fullspace){\n\t\t\te.requestFullspace();\n\t\t\te.addEventListener('fullspacechange', function(){\n\t\t\t\tscene.scale.setScalar(e.pixelsPerMeter);\n\t\t\t});\n\t\t}\n\n\t\tif (!this.data.usePixelScale || this.data.fullspace){\n\t\t\tscene.scale.setScalar(e.pixelsPerMeter);\n\t\t}\n\n\t  switch (this.data.verticalAlign) {\n\t\tcase 'bottom':\n\t\t  scene.position.y -= e.innerHeight / 2;\n\t\t  break;\n\t\tcase 'top':\n\t\t  scene.position.y += e.innerHeight / 2;\n\t\t  break;\n\t\tcase 'middle':\n\t\t  break;\n\t\tdefault:\n\t\t  console.warn('Unexpected value for verticalAlign: ', this.data.verticalAlign);\n\t  }\n\n\t  if(this.data.enclosuresOnly && e.innerDepth === 1){\n\t\tthis.el.renderer.render(new THREE.Scene());\n\t\tthis.el.renderer = this.el.effect = oldRenderer;\n\n\t  }\n\t}.bind(this));\n\n\tvar oldRenderer = this.el.renderer;\n\tvar renderer = this.el.renderer = this.el.effect = altspace.getThreeJSRenderer({\n\t  aframeComponentVersion: this.version\n\t});\n\tvar noop = function() {};\n\trenderer.setSize = noop;\n\trenderer.setPixelRatio = noop;\n\trenderer.setClearColor = noop;\n\trenderer.clear = noop;\n\trenderer.enableScissorTest = noop;\n\trenderer.setScissor = noop;\n\trenderer.setViewport = noop;\n\trenderer.getPixelRatio = noop;\n\trenderer.getMaxAnisotropy = noop;\n\trenderer.setFaceCulling = noop;\n\trenderer.context = {canvas: {}};\n\trenderer.shadowMap = {};\n\n  },\n\n  /*\n   * Emulate A-Frame cursor events when running in altspaceVR.\n   */\n  initCursorEvents: function() {\n\n\tvar scene = this.el.object3D;\n\tvar cursorEl = document.querySelector('a-cursor') || document.querySelector('a-entity[cursor]');\n\tif (cursorEl) {\n\t  // Hide A-Frame cursor mesh.\n\t  cursorEl.setAttribute('material', 'transparent', true);\n\t  cursorEl.setAttribute('material', 'opacity', 0.0);\n\t}\n\n\tvar emit = function (eventName, event) {\n\t\t// Fire events on intersected object and A-Frame cursor.\n\t\tvar targetEl = event.target.el;\n\t\tif (cursorEl) cursorEl.emit(eventName, { target: targetEl, ray: event.ray, point: event.point });\n\t\tif (targetEl) targetEl.emit(eventName, { target: targetEl, ray: event.ray, point: event.point });\n\t} ;\n\n\tvar cursordownObj = null;\n\tscene.addEventListener('cursordown', function(event) {\n\t  cursordownObj = event.target;\n\t  emit('mousedown', event);\n\t});\n\n\tscene.addEventListener('cursorup', function(event) {\n\t  emit('mouseup', event);\n\t  if (event.target.uuid === cursordownObj.uuid) {\n\t\temit('click', event);\n\t  }\n\t  cursordownObj = null;\n\t});\n\n\tscene.addEventListener('cursorenter', function(event) {\n\t  if (!event.target.el) { return; }\n\t  event.target.el.addState('hovered');\n\t  if (cursorEl) cursorEl.addState('hovering');\n\t  emit('mouseenter', event);\n\t});\n\n\tscene.addEventListener('cursorleave', function(event) {\n\t  if (!event.target.el) { return; }\n\t  event.target.el.removeState('hovered');\n\t  if (cursorEl) cursorEl.removeState('hovering');\n\t  emit('mouseleave', event);\n\t});\n\n  },\n\n  initCollisionEvents: function () {\n\n\tvar scene = this.el.object3D;\n\n\tvar emit = function (eventName, event) {\n\t\tvar targetEl = event.target.el;\n\t\tif (!targetEl) return;\n\n\t\t//remap target and other from object3Ds to aframe element\n\t\tevent.target = targetEl;\n\t\tif (event.other && event.other.el) {\n\t\t\tevent.other = event.other.el;\n\t\t}\n\t\ttargetEl.emit(eventName, event);\n\t};\n\n\tscene.addEventListener('collisionenter', function (event) {\n\t\temit('collisionenter', event);\n\t});\n\n\tscene.addEventListener('collisionexit', function (event) {\n\t\temit('collisionexit', event);\n\t});\n\n\tscene.addEventListener('triggerenter', function (event) {\n\t\temit('triggerenter', event);\n\t});\n\n\tscene.addEventListener('triggerexit', function (event) {\n\t\temit('triggerexit', event);\n\t});\n\n  }\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/altspace.js\n ** module id = 3\n ** module chunks = 0\n **/","AFRAME.registerSystem('instantiator', {\n\tinit: function () {\n\t\tthis.queuedInstantiations = [];\n\t\tthis.initialized = false;\n\t\tvar syncSys = this.sceneEl.systems['sync-system'];\n\t\tif (syncSys && syncSys.isConnected) {\n\t\t\tthis.initializeRef();\n\t\t}\n\t\telse {\n\t\t\tthis.sceneEl.addEventListener('connected', this.initializeRef.bind(this));\n\t\t}\n\t},\n\tinitializeRef: function () {\n\t\tthis.syncSys = this.sceneEl.systems['sync-system'];\n\t\tthis.instantiatedElementsRef = this.syncSys.sceneRef.child('instantiatedElements')\n\t\tthis.instantiatedElementsRef.on('child_added', this.createElement.bind(this));\n\t\tthis.instantiatedElementsRef.on('child_removed', this.removeElement.bind(this));\n\t\tthis.initialized = true;\n\t\tthis.processQueuedInstantiations();\n\t},\n\tprocessQueuedInstantiations: function () {\n\t\tthis.queuedInstantiations.forEach(function (instantiationProps) {\n\t\t\tinstantiationProps.clientId = this.syncSys.clientId;\n\t\t\tthis.instantiatedElementsRef.child(instantiationProps.groupName).push(instantiationProps);\n\t\t}.bind(this));\n\t\tthis.queuedInstantiations.length = 0;\n\t},\n\tinstantiate: function (instantiatorId, groupName, mixin, parent) {\n\t\t// Bit of a hack since we need to pass a string to instantiate() and this.stringify doesn't \n\t\t// return a proper selector for a-scene.\n\t\tvar parentSelector = parent.nodeName === 'A-SCENE' ? 'a-scene' : '#' + parent.id;\n\t\tvar instantiationProps = {\n\t\t\tinstantiatorId: instantiatorId,\n\t\t\tgroupName: groupName,\n\t\t\tmixin: mixin,\n\t\t\tparent: parentSelector\n\t\t};\n\t\tthis.queuedInstantiations.push(instantiationProps);\n\t\tif (this.initialized) {\n\t\t\tthis.processQueuedInstantiations();\n\t\t}\n\t},\n\tremoveLast: function (groupName) {\n\t\treturn new Promise(function (resolve) {\n\t\t\tthis.instantiatedElementsRef.child(groupName).orderByKey().limitToLast(1).once('value', function (snapshot) {\n\t\t\t\tif (!snapshot.hasChildren()) { resolve(); return; }\n\n\t\t\t\tvar ref = snapshot.ref();\n\t\t\t\tref.once('value', function () {\n\t\t\t\t\tvar val = snapshot.val();\n\t\t\t\t\tvar key = Object.keys(val)[0];\n\t\t\t\t\tvar props = val[key];\n\t\t\t\t\tresolve(props.instantiatorId);\n\t\t\t\t});\n\t\t\t\tref.remove();\n\t\t\t});\n\t\t}.bind(this));\n\t},\n\tcreateElement: function (snapshot) {\n\t\tvar val = snapshot.val();\n\t\tvar key = Object.keys(val)[0];\n\t\tconsole.log('BPDEBUG createElement', key);\n\t\tvar props = val[key];\n\t\tvar entityEl = document.createElement('a-entity');\n\t\tentityEl.id = props.groupName + '-instance-' + key;\n\t\tentityEl.dataset.instantiatorId = props.instantiatorId;\n\t\tdocument.querySelector(props.parent).appendChild(entityEl);\n\t\tentityEl.setAttribute('mixin', props.mixin);\n\t},\n\tremoveElement: function (snapshot) {\n\t\tvar val = snapshot.val();\n\t\tvar key = Object.keys(val)[0];\n\t\tvar props = val[key];\n\t\tvar id = props.groupName + '-instance-' + key;\n\t\tvar el = document.querySelector('#' + id);\n\t\tel.parentNode.removeChild(el);\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instantiator-system.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n* Instantiates objects on an event trigger and adds them to the scene. The instantiated objects are built using\n* the specified mixins.\n* @mixin instantiator\n* @prop {string} on - An event that triggers the instantiation\n* @prop {string} mixin - A space-separated list of mixins that should be used to instantiate the object.\n* @prop {string} parent='a-scene' - A selector that determines which object the instantiated object will be added to.\n* @prop {string} group='main' - An identifier which can be used to group instantiated objects.\n*/\nAFRAME.registerComponent('instantiator', {\n\tschema: {\n\t\ton: {type: 'string'},\n\t\tmixin: {type: 'string'},\n\t\tparent: {type: 'selector', default: 'a-scene'},\n\t\tgroup: {type: 'string', default: 'main'},\n\t\tremoveLast: {type: 'boolean', default: 'true'},\n\t\ttoggleExisting: {type: 'boolean', default: 'true'}\n\t},\n\tinit: function () {\n\t\tthis.onHandler = this.instantiateOrToggle.bind(this);\n\t\tthis.el.addEventListener(this.data.on, this.onHandler);\n\t},\n\tinstantiateOrToggle: function () {\n\t\tthis.system.removeLast(this.data.group).then(function (lastInstantiatorId) {\n\t\t\tif (lastInstantiatorId !== this.el.id) {\n\t\t\t\tthis.system.instantiate(this.el.id, this.data.group, this.data.mixin, this.data.parent)\n\t\t\t}\n\t\t}.bind(this));\n\t},\n\tremove: function () {\n\t\tthis.el.removeEventListener(this.data.on, this.onHandler);\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/instantiator.js\n ** module id = 5\n ** module chunks = 0\n **/","\n/**\n* This set of components map to various objects and effects that are provided\n* natively by AltspaceVR. Your management of these objects may be limited to\n* some degree, but they will tend to be more performant than SDK equivalents,\n* or may provide some functionality not otherwise available to the SDK.\n* @namespace native\n*/\n(function () {\n\tif (!window.altspace || !altspace.inClient) {\n\t\tvar noop = function () {};\n\t\twindow.altspace = {\n\t\t\taddNativeComponent: noop,\n\t\t\tupdateNativeComponent: noop,\n\t\t\tremoveNativeComponent: noop\n\t\t};\n\t}\n\n\tvar placeholderGeometry = new THREE.BoxGeometry(0.001, 0.001, 0.001);\n\tvar placeholderMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });\n\tplaceholderMaterial.visible = false;\n\tvar PlaceholderMesh = function () {\n\t\tTHREE.Mesh.call( this, placeholderGeometry, placeholderMaterial );\n\t};\n\tPlaceholderMesh.prototype = Object.create( THREE.Mesh.prototype );\n\tPlaceholderMesh.prototype.constructor = THREE.PlaceholderMesh;\n\n\tfunction meshInit(mesh) {\n\t\t//If you attach native components to an entity, it will not use a default collider\n\t\tmesh.userData.altspace = mesh.userData.altspace || {};\n\t\tmesh.userData.altspace.collider = mesh.userData.altspace.collider || {};\n\t\tmesh.userData.altspace.collider.enabled = false;\n\n\t\taltspace.addNativeComponent(mesh, this.name);\n\t}\n\n\tfunction nativeComponentInit() {\n\t\tvar mesh = this.el.getOrCreateObject3D('mesh', PlaceholderMesh);\n\n\t\tmeshInit.call(this, mesh);\n\n\t\t//to pass defaults\n\t\tthis.update(this.data);\n\t}\n\tfunction nativeComponentRemove() {\n\t\tvar mesh = this.el.getObject3D('mesh');\n\t\taltspace.removeNativeComponent(mesh, this.name);\n\t}\n\tfunction nativeComponentUpdate(oldData) {\n\t\taltspace.updateNativeComponent(this.el.object3DMap.mesh, this.name, this.data);\n\t}\n\n\tfunction callComponent(functionName, functionArguments) {\n\t\taltspace.callNativeComponent(this.el.object3DMap.mesh, this.name, functionName, functionArguments)\n\t}\n\n\t/**\n\t* Attach a given native object to this entity.\n\t* @mixin n-object\n\t* @memberof native\n\t* @prop {string} res - The identifier for the resource you want. This component\n\t* can accept all resources except for `interactables`.\n\t* @example <a-entity n-object='res:architecture/wall-4w-4h'></a-entity>\n\t*/\n\tAFRAME.registerComponent('n-object', {\n\t\tschema: {\n\t\t\tres: {type: 'string'}\n\t\t},\n\t\tinit: nativeComponentInit,\n\t\tupdate: nativeComponentUpdate,\n\t\tremove: nativeComponentRemove\n\t});\n\n\t/**\n\t* Create an object that spawns additional copies of itself when grabbed by a user (the copies are not spawners themselves).\n\t* These copies will be physically interactive and automatically synchronized\n\t* between users.\n\t* @mixin n-spawner\n\t* @memberof native\n\t* @prop {string} res - The identifier for the resource you want. This component\n\t* can only accept resources of type `interactables`.\n\t* @example <a-entity n-spawner='res: interactables/basketball'></a-entity>\n\t*/\n\tAFRAME.registerComponent('n-spawner', {\n\t\tschema: {\n\t\t\tres: {type: 'string'}\n\t\t},\n\t\tinit: nativeComponentInit,\n\t\tupdate: nativeComponentUpdate,\n\t\tremove: nativeComponentRemove\n\t});\n\n\t/**\n\t* Creates dynamic 2D text on the entity. The text will wrap automatically based on the width and height provided.\n\t* This text will be clearer than texture-based text and more performant than geometry-based test.\n\t* @mixin n-text\n\t* @memberof native\n\t* @prop {string} text - The text to be drawn.\n\t* @prop {number} fontSize=10 - The height of the letters. 10pt ~= 1m\n\t* @prop {number} width=10 - The width of the text area in meters. If the\n\t* text is wider than this value, the overflow will be wrapped to the next line.\n\t* @prop {number} height=1 - The height of the text area in meters. If the\n\t* text is taller than this value, the overflow will be cut off.\n\t* @prop {string} horizontalAlign=middle - The horizontal anchor point for\n\t* the text. Can be `left`, `middle`, or `right`.\n\t* @prop {string} verticalAlign=middle - The vertical anchor point for the\n\t* text. Can be `top`, `middle`, or `bottom`.\n\t*/\n\tAFRAME.registerComponent('n-text', {\n\t\tinit: nativeComponentInit,\n\t\tupdate: nativeComponentUpdate,\n\t\tremove: nativeComponentRemove,\n\t\tschema: {\n\t\t\ttext: { default: '', type: 'string' },\n\t\t\t/*color: { default: 'white',\n\t\t\t\tparse: function(value) {\n\t\t\t\t\treturn parseFloat(value, 10);\n\t\t\t\t},\n\t\t\t\tstringify: function(value) {\n\t\t\t\t\treturn value.toString();\n\t\t\t\t}},*/\n\t\t\tfontSize: { default: '10', type: 'int' },//roughly a meter tall\n\t\t\twidth: { default: '10', type: 'number' },//in meters\n\t\t\theight: { default: '1', type: 'number' },//in meters\n\t\t\thorizontalAlign: { default: 'middle'},\n\t\t\tverticalAlign: { default: 'middle'}\n\t\t}\n\t});\n\n\t//object: collides against: objects / enviroment / cursor\n\t//environment: can be teleported onto, and collides against: objects / environment / cursor\n\t//hologram: collides against: cursor / holograms\n\n\t/**\n\t* Abstract base class for {@link n.n-sphere-collider}, {@link n.n-box-collider},\n\t* {@link n.n-capsule-collider}, and {@link n.n-mesh-collider}. You cannot use\n\t* this class directly, but instead you should add one of those components\n\t* to your objects.\n\t* @name n-collider\n\t* @mixin n-collider\n\t* @memberof native\n\t* @prop {vec3} center=0,0,0 - The offset of the collider in local space.\n\t* @prop {string} type=hologram - The type of collider, one of: `object` | `environment` | `hologram`.\n\t* Object colliders collide with other objects, the environment, and the cursor.\n\t* Environment colliders collide with everything objects do, but you can also\n\t* teleport onto them. Hologram colliders only collide with other holograms and\n\t* the cursor.\n\t*/\n\n\t/**\n\t* Create a spherical collider on this entity.\n\t* @mixin n-sphere-collider\n\t* @memberof native\n\t* @extends native.n-collider\n\t* @prop {number} radius=1 - The size of the collider in meters.\n\t*/\n\tAFRAME.registerComponent('n-sphere-collider', {\n\t\tinit:nativeComponentInit,\n\t\tremove: nativeComponentRemove,\n\t\tupdate: nativeComponentUpdate,\n\t\tschema: {\n\t\t\tisTrigger: { default: false, type: 'boolean' },\n\t\t\tcenter: { type: 'vec3' },\n\t\t\tradius: { default: '0', type: 'number' },\n\t\t\ttype: {default: 'object'}\n\t\t}\n\t});\n\n\n\t/**\n\t* Create a box-shaped collider on this entity.\n\t* @mixin n-box-collider\n\t* @memberof native\n\t* @extends native.n-collider\n\t* @prop {vec3} size=1,1,1 - The dimensions of the collider.\n\t*/\n\tAFRAME.registerComponent('n-box-collider', {\n\t\tinit:nativeComponentInit,\n\t\tremove: nativeComponentRemove,\n\t\tupdate: nativeComponentUpdate,\n\t\tschema: {\n\t\t\tisTrigger: { default: false, type: 'boolean' },\n\t\t\tcenter: { type: 'vec3' },\n\t\t\tsize: { type: 'vec3' },\n\t\t\ttype: {default: 'object'}\n\t\t}\n\t});\n\n\t/**\n\t* Create a capsule-shaped collider on this entity. Capsules\n\t* are a union of a cylinder and two spheres on top and bottom.\n\t* @mixin n-capsule-collider\n\t* @memberof native\n\t* @extends native.n-collider\n\t* @prop {number} radius=1 - The radius of the capsule in meters.\n\t* @prop {number} height=1 - The height of the shaft of the capsule in meters.\n\t* @prop {string} direction=y - The axis with which the capsule is aligned.\n\t* One of `x`, `y`, or `z`.\n\t*/\n\tAFRAME.registerComponent('n-capsule-collider', {\n\t\tinit:nativeComponentInit,\n\t\tremove: nativeComponentRemove,\n\t\tupdate: nativeComponentUpdate,\n\t\tschema: {\n\t\t\tisTrigger: { default: false, type: 'boolean' },\n\t\t\tcenter: { type: 'vec3' },\n\t\t\tradius: { default: '0', type: 'number' },\n\t\t\theight: { default: '0', type: 'number' },\n\t\t\tdirection: { default: 'y' },\n\t\t\ttype: {default: 'object'}\n\t\t}\n\t});\n\n\t/**\n\t* Enable collision for the entire attached mesh. This is expensive to evaluate, so should only be used on\n\t* low-poly meshes.\n\t* @mixin n-mesh-collider\n\t* @memberof native\n\t* @extends native.n-collider\n\t* @example <a-box n-mesh-collider></a-box>\n\t* @prop {bool} convex=true - Whether the collider should be convex or concave. Set this to false if you have holes\n\t* in your mesh. Convex colliders are limited to 255 triangles. Note: concave colliders can be significantly more\n\t* expensive comparet to conves colliders.\n\t*/\n\tAFRAME.registerComponent('n-mesh-collider', {\n\t\t_forEachMesh: function (func) {\n\t\t\tvar obj = this.el.object3DMap.mesh;\n\t\t\tif (!obj) { return; }\n\t\t\tif (obj instanceof THREE.Mesh) {\n\t\t\t\tfunc(obj);\n\t\t\t}\n\t\t\tobj.traverse(function (childObj) {\n\t\t\t\tif (childObj instanceof THREE.Mesh) {\n\t\t\t\t\tfunc(childObj);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\t_initObj: function () {\n\t\t\tthis._forEachMesh(function (mesh) {\n\t\t\t\tmeshInit.call(this, mesh);\n\n\t\t\t\t//to pass defaults\n\t\t\t\taltspace.updateNativeComponent(mesh, this.name, this.data);\n\t\t\t}.bind(this));\n\t\t},\n\t\tinit: function () {\n\t\t\t// Allow a-frame to create a PlaceholderMesh if there isn't already one, so that the native collider is\n\t\t\t// registered.\n\t\t\tthis.el.getOrCreateObject3D('mesh', PlaceholderMesh);\n\n\t\t\t// Initialize the existing mesh\n\t\t\tthis._initObj();\n\n\t\t\tthis.el.addEventListener('model-loaded', function () {\n\t\t\t\t// Re-initialize the collider if a new model is loaded\n\t\t\t\tthis._initObj();\n\t\t\t}.bind(this));\n\t\t},\n\t\tremove: function () {\n\t\t\tthis._forEachMesh(function (mesh) {\n\t\t\t\taltspace.removeNativeComponent(mesh, this.name);\n\t\t\t}.bind(this));\n\t\t},\n\t\tupdate: function (oldData) {\n\t\t\tthis._forEachMesh(function (mesh) {\n\t\t\t\taltspace.updateNativeComponent(mesh, this.name, this.data);\n\t\t\t}.bind(this));\n\t\t},\n\t\tschema: {\n\t\t\tisTrigger: { default: false, type: 'boolean' },\n\t\t\tconvex: { default: true, type: 'boolean' },\n\t\t\ttype: {default: 'object'}\n\t\t}\n\t});\n\n\t/**\n\t* Make the object's +Z always face the viewer. Currently will only directly apply to main mesh or native component on the attached entity, not any children or submeshes.\n\t* @mixin n-billboard\n\t* @memberof native\n\t* @example <a-plane n-billboard></a-plane>\n\t*/\n\tAFRAME.registerComponent('n-billboard', {\n\t\tinit:nativeComponentInit,\n\t\tremove: nativeComponentRemove,\n\t});\n\n\t/**\n\t* A container keeps a running tally of how many objects are within\n\t* its bounds, and adds and removes the states `container-full` and\n\t* `container-empty` based on the current count of objects. Can fire three\n\t* special events: `container-full`, `container-empty`, and `container-count-changed`.\n\t* @mixin n-container\n\t* @memberof native\n\t* @prop {number} capacity=4 - The value at which the container will fire the\n\t* `container-full` event.\n\t*/\n\tAFRAME.registerComponent('n-container', {\n\t\tinit: function(){\n\t\t\tnativeComponentInit.call(this);\n\n\t\t\tvar el = this.el;\n\t\t\tvar component = this;\n\n\t\t\tel.addEventListener('stateadded', function(event){\n\t\t\t\tif(event.detail.state === 'container-full'){\n\t\t\t\t\tel.emit('container-full');\n\t\t\t\t}\n\t\t\t\tif(event.detail.state === 'container-empty'){\n\t\t\t\t\tel.emit('container-empty');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tel.addEventListener('container-count-changed', function(event){\n\t\t\t\tcomponent.count = event.detail.count;\n\t\t\t});\n\t\t},\n\t\tremove: nativeComponentRemove,\n\t\tupdate: nativeComponentUpdate,\n\t\tschema: {\n\t\t\tcapacity: { default: 4, type: 'number' },\n\t\t}\n\t});\n\n\t/**\n\t* Play the sound given by the `src` or `res` property from the location\n\t* of the entity.\n\t* @mixin n-sound\n\t* @memberof native\n\t* @prop {string} res - The resource identifier for a built-in sound clip.\n\t* @prop {string} src - A URL to an external sound clip. The sound can be in WAV, OGG or MP3 format. However. only\n\t* WAV is supported on all platforms. MP3 is supported on Gear VR and OGG is supported on desktop.\n\t* @prop {string} on - The name of the event that will play this sound clip.\n\t* @prop {boolean} loop=false - Tells the clip to loop back to the beginning of the clip\n\t* once it's finished.\n\t* @prop {boolean} autoplay=false - Tells the clip to start automatically when\n\t* the scene loads, instead of waiting for `playSound()`.\n\t* @prop {boolean} oneshot=false - Tells the clip to clean itself up when it\n\t* finishes playing. Allows for overlapping instances of the sound.\n\t* @prop {number} volume=1 - The volume of the clip, from [0,1].\n\t* @prop {number} spatialBlend=1 - How spatialized a sound is, from [0,1].\n\t* A value of 1 will be fully localized, and the sound will pan left and\n\t* right as you turn your head. A value of 0 makes it non-spatialized, and\n\t* it will always be heard in both ears.\n\t* @prop {number} pitch=1 - The speed multiplier for the sound. 0.5 is one\n\t* octave down, and 2 is one octave up.\n\t* @prop {number} minDistance=1 - Inside this distance in meters,\n\t* the sound volume is at full volume.\n\t* @prop {number} maxDistance=12 - If rolloff is 'logarithmic', the sound will stop attenuating at this distance.\n\t* If rolloff is 'linear' or 'cosine', the sound will be silent at this distance.\n\t* @prop {string} rolloff='logarithmic' - Set this to 'linear' or 'cosine' if you want to cut sounds off at a\n\t* maxDistance.\n\t*/\n\t/**\n\t* Fired when a sound has loaded and is ready to be played\n\t* @event native.n-sound#n-sound-loaded\n\t*/\n\tAFRAME.registerComponent('n-sound', {\n\t\tinit: function () {\n\t\t\tvar src = this.data.src;\n\t\t\tif (src && !src.startsWith('http')) {\n\t\t\t\tif (src.startsWith('/')) {\n\t\t\t\t\tthis.data.src = location.origin + src;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar currPath = location.pathname;\n\t\t\t\t\tif (!currPath.endsWith('/')) {\n\t\t\t\t\t\tcurrPath = location.pathname.split('/').slice(0, -1).join('/') + '/';\n\t\t\t\t\t}\n\t\t\t\t\tthis.data.src = location.origin + currPath + src;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnativeComponentInit.call(this);\n\t\t},\n\n\t\t/**\n\t\t* Stop the playing sound, and preserve position in clip.\n\t\t* @method native.n-sound#pauseSound\n\t\t*/\n\t\tpauseSound: function () {\n\t\t\tcallComponent.call(this, 'pause');\n\t\t\tthis.el.emit('sound-paused');\n\t\t},\n\n\t\t/**\n\t\t* Start the sound playing.\n\t\t* @method native.n-sound#playSound\n\t\t*/\n\t\tplaySound: function () {\n\t\t\tcallComponent.call(this, 'play');\n\t\t\tthis.el.emit('sound-played');\n\t\t},\n\n\t\t/**\n\t\t* Jump to a position in the clip.\n\t\t* @method native.n-sound#seek\n\t\t* @param {number} time - The time in milliseconds to jump to.\n\t\t*/\n\t\tseek: function (time) {\n\t\t\tcallComponent.call(this, 'seek', {time: time});\n\t\t},\n\t\tremove: function () {\n\t\t\tnativeComponentRemove.call(this);\n\t\t\tif (this.playHandler) {\n\t\t\t  this.el.removeEventListener(oldData.on, this.playHandler);\n\t\t\t}\n\t\t},\n\t\tupdate: function (oldData) {\n\t\t\tnativeComponentUpdate.call(this, oldData);\n\t\t\tif (this.playHandler) {\n\t\t\t  this.el.removeEventListener(oldData.on, this.playHandler);\n\t\t\t}\n\t\t\tif (this.data.on) {\n\t\t\t  this.playHandler = this.playSound.bind(this);\n\t\t\t  this.el.addEventListener(this.data.on, this.playHandler);\n\t\t\t}\n\t\t},\n\t\tschema: {\n\t\t\ton: { type: 'string' },\n\t\t\tres: { type: 'string' },\n\t\t\tsrc: { type: 'string' },\n\t\t\tloop: { type: 'boolean' },\n\t\t\tvolume: { type: 'number', default: 1 },\n\t\t\tautoplay: { type: 'boolean' },\n\t\t\toneshot: { type: 'boolean' },\n\t\t\tspatialBlend: { type: 'float', default: 1 },\n\t\t\tpitch: { type: 'float', default: 1 },\n\t\t\tminDistance: { type: 'float', default: 1 },\n\t\t\tmaxDistance: { type: 'float', default: 12 },\n\t\t\trolloff: { type: 'string', default: 'logarithmic' },\n\t\t}\n\t});\n\n\tAFRAME.registerComponent('n-skeleton-parent', {\n\t\tschema: {\n\t\t\tpart: {type: 'string'},\n\t\t\tside: {type: 'string', default: 'center'},\n\t\t\tindex: {type: 'int', default: 0},\n\t\t\tuserId: {type: 'string'}\n\t\t},\n\t\tinit: nativeComponentInit,\n\t\tupdate: nativeComponentUpdate,\n\t\tremove: nativeComponentRemove\n\t});\n\n\tAFRAME.registerComponent('n-cockpit-parent', {\n\t\tinit: nativeComponentInit,\n\t\tremove: nativeComponentRemove\n\t});\n\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/native-components.js\n ** module id = 6\n ** module chunks = 0\n **/","AFRAME.registerComponent('one-per-user', {\n\tdependencies: ['sync'],\n\tschema: {\n\t\tmixin: {type: 'string'},\n\t\tparent: {type: 'selector', default: 'a-scene'}\n\t},\n\tinit: function () {\n\t\t/*\n\t\tthis.syncSys = scene.systems['sync-system'];\n\t\tthis.sync = this.el.components.sync;\n\t\taltspace.getUser().then(function (user) {\n\t\t\tthis.userId = user.userId;\n\t\t\tif(this.syncSys.isConnected) { this._start(); }\n\t\t\telse { scene.addEventListener('connected', this._start.bind(this)); }\n\t\t}.bind(this));\n\t   */\n\t\tvar scene = document.querySelector('a-scene');\n\t\tthis.instantiatorSys = scene.systems['instantiator'];\n\t\tthis.instantiatorSys.instantiate(this.el.id, this.el.id, this.data.mixin, this.data.parent)\n\t\tconsole.log('BPDEBUG instantiated one-per-user');\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/one-per-user.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n* Sync the color property of the object between clients.\n* Requires both a {@link sync.sync-system} component on the `a-scene`, and a\n* {@link sync.sync} component on the target entity.\n* @mixin sync-color\n* @memberof sync\n*/\nAFRAME.registerComponent('sync-color',\n{\n\tdependencies: ['sync'],\n\tschema: {\n\t},\n\tinit: function () {\n\t\tvar component = this;\n\t\tvar sync = component.el.components.sync;\n\t\tif(sync.isConnected) start(); else component.el.addEventListener('connected', start);\n\n\t\tfunction start(){\n\t\t\tvar colorRef = sync.dataRef.child('material/color');\n\n\t\t\tvar refChangedLocked = false;\n\n\t\t\tvar firstValue = true;\n\n\t\t\tcomponent.el.addEventListener('componentchanged', function (event) {\n\t\t\t\tvar name = event.detail.name;\n\t\t\t\tvar oldData = event.detail.oldData;\n\t\t\t\tvar newData = event.detail.newData;\n\n\t\t\t\tif (name !== 'material') return;\n\t\t\t\tif (refChangedLocked) return;\n\n\t\t\t\tif (oldData.color !== newData.color) {\n\t\t\t\t\tif(sync.isMine){\n\t\t\t\t\t\tsetTimeout(function() {//For some reason A-Frame has a misconfigured material reference if we do this too early\n\t\t\t\t\t\t\tcolorRef.set(newData.color);\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcolorRef.on('value', function (snapshot) {\n\t\t\t\tif (sync.isMine && !firstValue) return;\n\t\t\t\tvar color = snapshot.val();\n\n\t\t\t\trefChangedLocked = true;\n\t\t\t\tcomponent.el.setAttribute('material', 'color', color);\n\t\t\t\trefChangedLocked = false;\n\n\t\t\t\tfirstValue = false;\n\t\t\t});\n\t\t}\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sync-color.js\n ** module id = 9\n ** module chunks = 0\n **/","AFRAME.registerComponent('sync-n-parent', {\n\tdependencies: ['sync'],\n\tinit: function () {\n\t\tvar scene = document.querySelector('a-scene');\n\t\tthis.syncSys = scene.systems['sync-system'];\n\t\tthis.sync = this.el.components.sync;\n\t\taltspace.getUser().then(function (user) {\n\t\t\tthis.userId = user.userId;\n\t\t\tif(this.syncSys.isConnected) { this._start(); }\n\t\t\telse { scene.addEventListener('connected', this._start.bind(this)); }\n\t\t}.bind(this));\n\t},\n\tgetDataRef: function (propertyName) {\n\t\treturn this.sync.dataRef.child('n-skeleton-parent/' + propertyName);\n\t},\n\t_start: function () {\n\t\tthis.attributeRef = this.sync.dataRef.child('n-skeleton-parent');\n\t\tthis.attributeRef.on('value', function (snapshot) {\n\t\t\tvar val = snapshot.val();\n\t\t\tif (!val) { return; }\n\t\t\tconsole.log('BPDEBUG setAttribute', val);\n\t\t\tthis.el.setAttribute('n-skeleton-parent', val);\n\t\t}.bind(this));\n\n\t\t// immediately sync this entity's parent userId to the owner's\n\t\tif (this.sync.isMine) {\n\t\t\tconsole.log('BPDEBUG isMine', this.userId);\n\t\t\tthis.attributeRef.set(Object.assign(\n\t\t\t\t{}, this.el.components['n-skeleton-parent'].data, {userId: this.userId}));\n\t\t}\n\t\tthis.el.addEventListener('componentchanged', function (event) {\n\t\t\tif (!this.sync.isMine) return;\n\t\t\tvar name = event.detail.name;\n\t\t\tif (name === 'n-skeleton-parent') {\n\t\t\t\tconsole.log('BPDEBUG newData', event.detail.newData);\n\t\t\t\tthis.attributeRef.set(event.detail.newData);\n\t\t\t}\n\t\t}.bind(this));\n\n\t\tthis.el.addEventListener('ownershipgained', function () {\n\t\t\tthis.attributeRef.set(Object.assign(\n\t\t\t\t{}, this.el.components['n-skeleton-parent'].data, {userId: this.userId}));\n\t\t}.bind(this));\n\t}\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sync-n-parent.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n* Synchronize the playback state of an {@link n.n-sound} component between clients.\n* Requires both a {@link sync.sync-system} component on the `a-scene`, and a\n* {@link sync.sync} component on the target entity.\n* @mixin sync-n-sound\n* @memberof sync\n*/\nAFRAME.registerComponent('sync-n-sound',\n{\n\tdependencies: ['sync'],\n\tschema: { },\n\tinit: function () {\n\t\tvar component = this;\n\t\tvar sync = component.el.components.sync;\n\t\tvar scene = document.querySelector('a-scene');\n\t\tvar syncSys = scene.systems['sync-system'];\n\t\tif(sync.isConnected) start(); else component.el.addEventListener('connected', start);\n\n\t\tfunction start(){\n\t\t\tcomponent.soundStateRef = sync.dataRef.child('sound/state');\n\t\t\tcomponent.soundEventRef = sync.dataRef.child('sound/event');\n\n\t\t\tfunction sendEvent(event) {\n\t\t\t\tif (!sync.isMine) return;\n\t\t\t\tvar event = {\n\t\t\t\t\ttype: event.type,\n\t\t\t\t\tsender: syncSys.clientId,\n\t\t\t\t\tel: component.el.id,\n\t\t\t\t\ttime: Date.now()\n\t\t\t\t};\n\t\t\t\tcomponent.soundEventRef.set(event);\n\t\t\t}\n\n\t\t\tcomponent.el.addEventListener('sound-played', sendEvent);\n\t\t\tcomponent.el.addEventListener('sound-paused', sendEvent);\n\n\t\t\tcomponent.soundEventRef.on('value', function (snapshot) {\n\t\t\t\tif (sync.isMine) return;\n\t\t\t\tvar event = snapshot.val();\n\t\t\t\tif (!event) return;\n\t\t\t\tif (event.el === component.el.id) {\n\t\t\t\t\tvar sound = component.el.components['n-sound'];\n\t\t\t\t\tif (event.type === 'sound-played') {\n\t\t\t\t\t\tsound.playSound();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsound.pauseSound();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcomponent.el.addEventListener('componentchanged', function (event) {\n\t\t\t\tif (!sync.isMine) return;\n\t\t\t\tvar name = event.detail.name;\n\t\t\t\tif (name !== 'n-sound') return;\n\t\t\t\tcomponent.soundStateRef.set(event.detail.newData);\n\t\t\t});\n\n\t\t\tcomponent.soundStateRef.on('value', function (snapshot) {\n\t\t\t\tif (sync.isMine) return;\n\t\t\t\tvar state = snapshot.val();\n\t\t\t\tif (!state) return;\n\t\t\t\tcomponent.el.setAttribute('n-sound', state);\n\t\t\t});\n\t\t}\n\t},\n\tremove: function () {\n\t\tthis.soundStateRef.off('value');\n\t\tthis.soundEventRef.off('value');\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sync-n-sound.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n* Connect to a remote Firebase server, and facilitate synchronization. These\n* options correspond exactly with the configuration options for\n* [altspace.utilities.sync.connect]{@link http://altspacevr.github.io/AltspaceSDK/doc/module-altspace_utilities_sync.html#.connect}.\n* This component must be present on `a-scene` for any other sync components to work.\n* @memberof sync\n* @mixin sync-system\n* @prop {string} author - A unique identifier for you or your organization.\n* @prop {string} app - The name of the app.\n* @prop {string} refUrl - Override the base reference. Set this to use your own Firebase.\n* @prop {string} instance - Override the instance ID. Can also be overridden with\n* a URL parameter.\n*/\nAFRAME.registerSystem('sync-system',\n{\n\tschema: {\n\t\tauthor: { type: 'string', default: null },\n\t\tapp: { type: 'string', default: null },\n\t\tinstance: { type: 'string', default: null },\n\t\trefUrl: { type: 'string', default: null }\n\t},\n\tinit: function() {\n\t\tvar system = this;\n\n\t\tif(!this.data || !this.data.app){\n\t\t\tconsole.warn('The sync-system must be present on the scene and configured with required data.');\n\t\t\treturn;\n\t\t}\n\n\t\tsystem.isConnected = false;\n\t\tconsole.log(this.data);\n\t\taltspace.utilities.sync.connect({\n\t\t\tauthorId: this.data.author,\n\t\t\tappId: this.data.app,\n\t\t\tinstanceId: this.data.instance,\n\t\t\tbaseRefUrl: this.data.refUrl\n\t\t}).then(function(connection) {\n\t\t\tthis.connection = connection;\n\n\t\t\tthis.sceneRef = this.connection.instance.child('scene');\n\t\t\tthis.clientsRef = this.connection.instance.child('clients');\n\n\t\t\t// temporary way of having unique identifiers for each client\n\t\t\tthis.clientId = this.sceneEl.object3D.uuid;\n\t\t\tconsole.log('BPDEBUG clientId', this.clientId);\n\t\t\tvar masterClientId;\n\t\t\tthis.clientsRef.on(\"value\", function (snapshot) {\n\t\t\t\tvar clientIds = snapshot.val();\n\n\t\t\t\tvar masterClientKey = Object.keys(clientIds)[0];\n\t\t\t\tmasterClientId = clientIds[masterClientKey];\n\t\t\t});\n\n\t\t\tthis.clientsRef.on('child_added', function(childSnapshot) {\n\t\t\t\tvar joinedClientId = childSnapshot.val();\n\t\t\t\t//let the master client flag get set first\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tsystem.sceneEl.emit('clientjoined', {id: joinedClientId}, false);\n\t\t\t\t}, 0);\n\t\t\t});\n\n\t\t\tthis.clientsRef.on('child_removed', function(childSnapshot) {\n\t\t\t\tvar leftClientId = childSnapshot.val();\n\t\t\t\t//let the master client flag get set first\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tsystem.sceneEl.emit('clientleft', {id: leftClientId}, false);\n\t\t\t\t}, 0);\n\t\t\t});\n\n\t\t\t// add our client ID to the list of connected clients,\n\t\t\t// but have it be automatically removed by firebase if we disconnect for any reason\n\t\t\tthis.clientsRef.push(this.clientId).onDisconnect().remove();\n\n\t\t\tthis.connection.instance.child('initialized').once('value', function (snapshot) {\n\t\t\t\tvar shouldInitialize = !snapshot.val();\n\t\t\t\tsnapshot.ref().set(true);\n\n\t\t\t\tsystem.sceneEl.emit('connected', { shouldInitialize: shouldInitialize }, false);\n\t\t\t\tsystem.isConnected = true;\n\t\t\t}.bind(this));\n\n\n\t\t\tObject.defineProperty(this, 'isMasterClient', {\n\t\t\t\tget: function () { return masterClientId === this.clientId; }.bind(this)\n\t\t\t});\n\t\t}.bind(this));\n\t},\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sync-system.js\n ** module id = 12\n ** module chunks = 0\n **/","//TODO: We need to figure out a way to recieve our first update without caring about ownership.\n// firstValue is probably not the right way to go, probably something about having sent yet. Need to change for both\n\n/**\n* Synchronize the position, rotation, and scale of this object with all clients.\n* Requires both a {@link sync.sync-system} component on the `a-scene`, and a\n* {@link sync.sync} component on the target entity.\n* @mixin sync-transform\n* @memberof sync\n*/\nAFRAME.registerComponent('sync-transform',\n{\n\tdependencies: ['sync'],\n\tschema: {\n\t},\n\tinit: function () {\n\t\tvar component = this;\n\t\tvar sync = component.el.components.sync;\n\t\tif(sync.isConnected) start(); else component.el.addEventListener('connected', start);\n\n\t\tfunction start(){\n\n\t\t\tvar positionRef = sync.dataRef.child('position');\n\t\t\tvar rotationRef = sync.dataRef.child('rotation');\n\t\t\tvar scaleRef = sync.dataRef.child('scale');\n\n\t\t\tcomponent.updateRate = 100;\n\n\t\t\tvar stoppedAnimations = [];\n\t\t\t//pause all animations on ownership loss\n\t\t\tcomponent.el.addEventListener('ownershiplost', function() {\n\t\t\t\tvar children = component.el.children;\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar tagName = children[i].tagName.toLowerCase();\n\t\t\t\t\tif (tagName === \"a-animation\") {\n\t\t\t\t\t\tstoppedAnimations.push(children[i]);\n\t\t\t\t\t\tchildren[i].stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tcomponent.el.addEventListener('ownershipgained', function () {\n\t\t\t\tfor (var i = 0; i < stoppedAnimations.length; i++) {\n\t\t\t\t\tvar animation = stoppedAnimations[i];\n\t\t\t\t\tanimation.start();\n\t\t\t\t}\n\t\t\t\tstoppedAnimations = [];\n\t\t\t});\n\n\t\t\tfunction onTransform(snapshot, componentName) {\n\t\t\t\tif (sync.isMine) return;\n\n\t\t\t\tvar value = snapshot.val();\n\t\t\t\tif (!value) return;\n\n\t\t\t\tcomponent.el.setAttribute(componentName, value);\n\t\t\t}\n\n\t\t\tpositionRef.on('value', function (snapshot) {\n\t\t\t\tonTransform(snapshot, 'position');\n\t\t\t});\n\n\t\t\trotationRef.on('value', function (snapshot) {\n\t\t\t\tonTransform(snapshot, 'rotation');\n\t\t\t});\n\n\t\t\tscaleRef.on('value', function (snapshot) {\n\t\t\t\tonTransform(snapshot, 'scale');\n\t\t\t});\n\n\t\t\tvar sendPosition = throttle(function(value){\n\t\t\t\tpositionRef.set(value);\n\t\t\t}, component.updateRate);\n\n\t\t\tvar sendRotation = throttle(function(value){\n\t\t\t\trotationRef.set(value);\n\t\t\t}, component.updateRate);\n\n\t\t\tvar sendScale = throttle(function(value){\n\t\t\t\tscaleRef.set(value);\n\t\t\t}, component.updateRate);\n\n\t\t\tfunction onComponentChanged(event){\n\t\t\t\tif (!sync.isMine) return;\n\n\t\t\t\tvar name = event.detail.name;\n\t\t\t\tvar newData = event.detail.newData;\n\n\t\t\t\tif (name === 'position') {\n\t\t\t\t\tsendPosition(newData);\n\t\t\t\t} else if (name === 'rotation') {\n\t\t\t\t\tsendRotation(newData);\n\t\t\t\t} else if (name === 'scale') {\n\t\t\t\t\tsendScale(newData);\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//from underscore.js\n\t\t\tfunction throttle(func, wait, options) {\n\t\t\t\tvar timeout, context, args, result;\n\t\t\t\tvar previous = 0;\n\t\t\t\tif (!options) options = {};\n\n\t\t\t\tvar later = function() {\n\t\t\t\t  previous = options.leading === false ? 0 : Date.now();\n\t\t\t\t  timeout = null;\n\t\t\t\t  result = func.apply(context, args);\n\t\t\t\t  if (!timeout) context = args = null;\n\t\t\t\t};\n\n\t\t\t\tvar throttled = function() {\n\t\t\t\t  var now = Date.now();\n\t\t\t\t  if (!previous && options.leading === false) previous = now;\n\t\t\t\t  var remaining = wait - (now - previous);\n\t\t\t\t  context = this;\n\t\t\t\t  args = arguments;\n\t\t\t\t  if (remaining <= 0 || remaining > wait) {\n\t\t\t\t\tif (timeout) {\n\t\t\t\t\t  clearTimeout(timeout);\n\t\t\t\t\t  timeout = null;\n\t\t\t\t\t}\n\t\t\t\t\tprevious = now;\n\t\t\t\t\tresult = func.apply(context, args);\n\t\t\t\t\tif (!timeout) context = args = null;\n\t\t\t\t  } else if (!timeout && options.trailing !== false) {\n\t\t\t\t\ttimeout = setTimeout(later, remaining);\n\t\t\t\t  }\n\t\t\t\t  return result;\n\t\t\t\t};\n\n\t\t\t\tthrottled.cancel = function() {\n\t\t\t\t  clearTimeout(timeout);\n\t\t\t\t  previous = 0;\n\t\t\t\t  timeout = context = args = null;\n\t\t\t\t};\n\n\t\t\t\treturn throttled;\n\t\t\t  };\n\n\n\t\t\tcomponent.el.addEventListener('componentchanged', onComponentChanged);\n\t\t}\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sync-transform.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n* Enables the synchronization of properties of entities. All property sync components\n* require both a {@link sync.sync-system} on `a-scene`, and a {@link sync.sync}\n* on the entity to be synced.\n* @name sync\n* @namespace sync\n* @example\n* <a-scene sync-system='app: example sync; author: altspacevr'>\n*   <a-entity sync='ownOn: cursordown' sync-color></a-entity>\n* </a-scene>\n*/\n\n\n\n/**\n* Enables the synchronization of properties of the entity. Must be used in\n* conjuction with the {@link sync.sync-system} component and a component for a\n* specific property (e.g. {@link sync.sync-transform}).\n* @memberof sync\n* @mixin sync\n* @prop {string} ownOn - The name of the event, or a list of events, that\n* will cause the local client to take ownership of this object. This field\n* cannot be updated after initialization.\n*/\nAFRAME.registerComponent('sync',\n{\n\tschema: {\n\t\tmode: { default: 'link' },\n\t\townOn: { type: 'string' } //cannot be changed after creation\n\t},\n\tinit: function () {\n\t\tvar scene = document.querySelector('a-scene');\n\t\tvar syncSys = scene.systems['sync-system'];\n\n\t\tvar ref;\n\t\tvar dataRef;\n\t\tvar ownerRef;\n\t\tvar ownerId;\n\t\tvar isMine = false;\n\n\t\tvar component = this;\n\n\t\tcomponent.isConnected = false;\n\n\t\tif(syncSys.isConnected) start(); else scene.addEventListener('connected', start);\n\n\n\t\tif(component.data.ownOn)\n\t\t{\n\t\t\tvar ownershipEvents = component.data.ownOn.split(/[ ,]+/);\n\t\t\tfor(var i = 0, max = ownershipEvents.length; i < max; i++){\n\t\t\t\tcomponent.el.addEventListener(ownershipEvents[i], function(){\n\t\t\t\t\tif(component.isConnected){\n\t\t\t\t\t\tcomponent.takeOwnership();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction start(){\n\t\t\t//Make sure someone always owns an object. If the owner leaves and we are the master client, we will take it.\n\t\t\t//This ensures, for example, that synced animations keep playing\n\t\t\tscene.addEventListener('clientleft', function(event){\n\t\t\t\tvar shouldTakeOwnership = (!ownerId || ownerId === event.detail.id) && syncSys.isMasterClient;\n\n\t\t\t\tif(shouldTakeOwnership) component.takeOwnership();\n\t\t\t});\n\n\t\t\tif (component.data.mode === 'link') {\n\t\t\t\tvar id = component.el.id;\n\t\t\t\tif (!id) {\n\t\t\t\t\tconsole.error('Entities cannot be synced using link mode without an id.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log('syncSys: ' + syncSys);\n\t\t\t\tconsole.log('syncSys.sceneRef: ' + syncSys.sceneRef);\n\n\t\t\t\tlink(syncSys.sceneRef.child(id));\n\t\t\t\tsetupReceive();\n\n\t\t\t} else {\n\t\t\t\tconsole.error('Unsupported sync mode: ' + component.data.mode);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcomponent.isConnected = true;\n\t\t\tcomponent.el.emit('connected', null, false);\n\t\t}\n\n\t\tfunction link(entityRef) {\n\t\t\tref = entityRef;\n\t\t\tdataRef = ref.child('data');\n\t\t\tcomponent.dataRef = dataRef;\n\t\t\townerRef = ref.child('owner');\n\t\t}\n\n\t\tfunction setupReceive() {\n\n\t\t\t//if nobody has owned the object yet, we will.\n\t\t\townerRef.transaction(function (owner) {\n\t\t\t\tconsole.log('BPDEBUG ownerRef transaction', owner, syncSys.clientId);\n\t\t\t\tif (owner) return undefined;\n\n\t\t\t\townerRef.onDisconnect().set(null);\n\t\t\t\treturn syncSys.clientId;\n\t\t\t}, function (error, committed, snapshot) {\n\t\t\t\t// Return since transaction will be called again\n\t\t\t\tif (!committed) { return; }\n\t\t\t\townerRef.on('value', function(snapshot) {\n\t\t\t\t\tvar newOwnerId = snapshot.val();\n\t\t\t\t\tconsole.log('BPDEBUG ownerRef', newOwnerId);\n\n\t\t\t\t\tvar gained = newOwnerId === syncSys.clientId && !isMine;\n\t\t\t\t\tif (gained) component.el.emit('ownershipgained', null, false);\n\n\n\t\t\t\t\t//note this also fires when we start up without ownership\n\t\t\t\t\tvar lost = newOwnerId !== syncSys.clientId && isMine;\n\t\t\t\t\tif (lost){\n\t\t\t\t\t\tcomponent.el.emit('ownershiplost', null, false);\n\n\t\t\t\t\t\t//we no longer have to clear our ownership when we disconnect\n\t\t\t\t\t\townerRef.onDisconnect().cancel();\n\t\t\t\t\t}\n\n\t\t\t\t\townerId = newOwnerId;\n\n\t\t\t\t\tisMine = newOwnerId === syncSys.clientId;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t* Tell sync to start pushing local property values instead of updating\n\t\t* local from remote values.\n\t\t* @method sync.sync#takeOwnership\n\t\t*/\n\t\tcomponent.takeOwnership = function() {\n\t\t\tconsole.log('BPDEBUG takeOwnership', syncSys.clientId);\n\t\t\townerRef.set(syncSys.clientId);\n\n\t\t\t//clear our ownership if we disconnect\n\t\t\t//this is needed if we are the last user in the room, but we expect people to join later\n\t\t\townerRef.onDisconnect().set(null);\n\t\t}\n\n\t\t/**\n\t\t* Indicates whether the sync ownership is yours.\n\t\t* @member sync.sync#isMine\n\t\t* @readonly\n\t\t*/\n\t\tObject.defineProperty(component, 'isMine', {\n\t\t\tget: function () {\n\t\t\t\treturn isMine;//TODO: Should this be state instead?\n\t\t\t}\n\t\t});\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sync.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * The wire component allows you to trigger an event on another entity when an event occurs on an entity\n * @mixin wire\n * @property {string} on Name of an event to listen to\n * @property {string} gained Name of a state to watch for\n * @property {string} lost Name of a state to watch for\n * @property {string} emit Name of an event to trigger on the targets\n * @property {string} gain Name of a state to add on the target\n * @property {string} lose Name of a state to remove on the target\n * @property {selector} targets A selector to pick which objects to wire to\n * @property {selector} target - A selector to pick a single object to wire to\n **/\nAFRAME.registerComponent('wire',\n{\n\tmultiple: true,\n\tschema: {\n\t\ton: {type: 'string'},\n\t\temit: {type: 'string'},\n\t\tgained: {type: 'string'},\n\t\tlost: {type: 'string'},\n\t\tgain: {type: 'string'},\n\t\tlose: {type: 'string'},\n\t\ttargets: {type: 'selectorAll'},\n\t\ttarget: {type: 'selector'}\n\t},\n\tupdate: function (oldData) {\n\t\tif (oldData.on) {\n\t\t\tthis.el.removeEventListener(oldData.on, this.actOnTargets);\n\t\t}\n\t\tif (oldData.gained) {\n\t\t\tthis.el.removeEventListener('stateadded', this.actOnTargetsIfStateMatches);\n\t\t}\n\t\tif (oldData.lost) {\n\t\t\tthis.el.removeEventListener('stateremoved', this.actOnTargetsIfStateMatches);\n\t\t}\n\n\t\tthis.actOnTargets = function () {\n\t\t\tfunction act(el) {\n\t\t\t\tif (this.data.emit) {\n\t\t\t\t\tel.emit(this.data.emit);\n\t\t\t\t}\n\t\t\t\tif (this.data.gain) {\n\t\t\t\t\tel.addState(this.data.gain);\n\t\t\t\t}\n\t\t\t\tif (this.data.lose) {\n\t\t\t\t\tel.removeState(this.data.lose);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.data.targets) this.data.targets.forEach(act.bind(this));\n\t\t\tif(this.data.target) act.call(this, this.data.target);\n\t\t}.bind(this);\n\n\t\tthis.actOnTargetsIfStateMatches = function (event) {\n\t\t\tvar state = event.detail.state;\n\t\t\tif (state === this.data.gained || state === this.data.lost) {\n\t\t\t\tthis.actOnTargets();\n\t\t\t}\n\t\t}.bind(this);\n\n\t\tif (this.data.on) {\n\t\t\tthis.el.addEventListener(this.data.on, this.actOnTargets);\n\t\t}\n\t\tif (this.data.gained) {\n\t\t\tthis.el.addEventListener('stateadded', this.actOnTargetsIfStateMatches);\n\t\t}\n\t\tif (this.data.lost) {\n\t\t\tthis.el.addEventListener('stateremoved', this.actOnTargetsIfStateMatches);\n\t\t}\n\t},\n\tremove: function () {\n\t\tthis.el.removeEventListener(this.data.on, this.actOnTargets);\n\t\tthis.el.removeEventListener('stateadded', this.actOnTargetsIfStateMatches);\n\t\tthis.el.removeEventListener('stateremoved', this.actOnTargetsIfStateMatches);\n\t}\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/wire.js\n ** module id = 15\n ** module chunks = 0\n **/"],"sourceRoot":""}