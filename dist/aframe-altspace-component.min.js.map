{"version":3,"file":"aframe-altspace-component.min.js","sources":["../src/AFrameComponent.js","../src/utilities.js","../src/AltspaceCursorCollider.js","../src/AltspaceTrackedControls.js","../src/AltspaceComponent.js","../src/SyncColor.js","../src/index.js"],"sourcesContent":["'use strict';\r\n\r\nclass AFrameComponent\r\n{\r\n\tget schema(){\r\n\t\treturn null;\r\n\t}\r\n\r\n\tinit(){ }\r\n\tupdate(oldData){ }\r\n\tremove(){ }\r\n\ttick(time, timeDelta){ }\r\n\tpause(){ }\r\n\tplay(){ }\r\n\tupdateSchema(data){ }\r\n\r\n}\r\n\r\nfunction flatten(obj)\r\n{\r\n\tlet ret = {};\r\n\tif(!obj.prototype){\r\n\t\tret = Object.assign( {schema: {}, dependencies: []}, obj );\r\n\t}\r\n\telse {\r\n\t\tret = Object.assign( flatten(obj.prototype), obj );\r\n\t}\r\n\r\n\tif(obj.schema)\r\n\t\tObject.assign(ret.schema, obj.schema);\r\n\t\t\r\n\tif(obj.dependencies)\r\n\t\tret.dependencies.push(...obj.dependencies);\r\n\r\n\treturn ret;\r\n}\r\n\r\nfunction registerComponent(name, cls)\r\n{\r\n\tAFRAME.registerComponent(name, flatten(cls));\r\n}\r\n\r\nexport { AFrameComponent, registerComponent };\r\n","'use strict';\r\n\r\nfunction safeDeepSet(obj, keys, value)\r\n{\r\n\tif(keys.length === 0)\r\n\t\treturn value;\r\n\telse {\r\n\t\tobj[keys[0]] = safeDeepSet(obj[keys[0]] || {}, keys.slice(1), value);\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nexport { safeDeepSet };\r\n","/**\r\n* Enable or disable cursor collision on the object.\r\n* @mixin altspace-cursor-collider\r\n* @memberof altspace\r\n* @prop {boolean} enabled=true - The state of the cursor collider.\r\n*/\r\n\r\n'use strict';\r\n\r\nimport {AFrameComponent} from './AFrameComponent';\r\nimport {safeDeepSet} from './utilities';\r\n\r\n\r\nexport default class AltspaceCursorCollider extends AFrameComponent\r\n{\r\n\tget schema(){\r\n\t\treturn {enabled: {type: 'boolean', default: 'true'}};\r\n\t}\r\n\r\n\tinit()\r\n\t{\r\n\t\tthis.setColliderFlag(this.data.enabled);\r\n\t\tthis.el.addEventListener('model-loaded', (() => {\r\n\t\t\tthis.setColliderFlag(this.data.enabled);\r\n\t\t}).bind(this));\r\n\t}\r\n\r\n\tupdate()\r\n\t{\r\n\t\tthis.setColliderFlag(this.data.enabled);\r\n\t}\r\n\r\n\tsetColliderFlag(state)\r\n\t{\r\n\t\tlet obj = this.el.object3D;\r\n\t\tif(obj){\r\n\t\t\tconsole.log('Setting collider flag to', state);\r\n\t\t\tsafeDeepSet(obj.userData, ['altspace','collider','enabled'], state);\r\n\t\t\tobj.traverse(subobj => {\r\n\t\t\t\tif( subobj instanceof THREE.Mesh ){\r\n\t\t\t\t\tsafeDeepSet(subobj.userData, ['altspace','collider','enabled'], state);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n","/**\r\n* Enables tracked control support for A-Frame applications that use the built-in\r\n* `tracked-controls`, `vive-controls` or `hand-controls` components.\r\n* @mixin altspace-tracked-controls\r\n* @memberof altspace\r\n*/\r\n'use strict';\r\n\r\nimport {AFrameComponent} from './AFrameComponent';\r\n\r\nexport default class AltspaceTrackedControls extends AFrameComponent\r\n{\r\n\tinit()\r\n\t{\r\n\t\tthis.gamepadIndex = null;\r\n\t\tthis.trackedControlsSystem = document.querySelector('a-scene').systems['tracked-controls'];\r\n\t\tthis.systemGamepads = 0;\r\n\t\taltspace.getGamepads();\r\n\t}\r\n\r\n\ttick()\r\n\t{\r\n\t\tif (\r\n\t\t\tthis.trackedControlsSystem &&\r\n\t\t\tthis.systemGamepads !== this.trackedControlsSystem.controllers.length &&\r\n\t\t\twindow.altspace && altspace.getGamepads && altspace.getGamepads().length\r\n\t\t) {\r\n\t\t\tvar components = this.el.components;\r\n\t\t\tif (components['paint-controls']) {\r\n\t\t\t\tthis.gamepadIndex = components['paint-controls'].data.hand === 'left' ? 2 : 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.gamepadIndex === null && components['hand-controls']) {\r\n\t\t\t\tthis.gamepadIndex = components['hand-controls'].data === 'left' ? 2 : 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.gamepadIndex === null && components['vive-controls']) {\r\n\t\t\t\tthis.gamepadIndex = components['vive-controls'].data.hand === 'left' ? 2 : 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.gamepadIndex === null && components['tracked-controls']) {\r\n\t\t\t\tthis.gamepadIndex = components['tracked-controls'].data.controller;\r\n\t\t\t}\r\n\r\n\t\t\tthis.el.setAttribute('tracked-controls', 'id', altspace.getGamepads()[this.gamepadIndex].id);\r\n\t\t\tthis.el.setAttribute('tracked-controls', 'controller', 0);\r\n\t\t\tthis.systemGamepads = this.trackedControlsSystem.controllers.length;\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n* @namespace altspace\r\n*/\r\n\r\n/**\r\n* The altspace component makes A-Frame apps compatible with AltspaceVR.\r\n*\r\n* **Note**: If you use the `embedded` A-Frame component on your scene, you must include it *before* the `altspace` component, or your app will silently fail.\r\n* @mixin altspace\r\n* @memberof altspace\r\n* @property {boolean} usePixelScale=`false` - Allows you to use A-Frame units as CSS pixels.\r\n* This is the default behavior for three.js apps, but not for A-Frame apps.\r\n* @property {string} verticalAlign=`middle` - Puts the origin at the `bottom`, `middle` (default),\r\n* or `top` of the Altspace enclosure.\r\n* @property {boolean} enclosuresOnly=`true` - Prevents the scene from being created if\r\n* enclosure is flat.\r\n* @property {boolean} fullspace=`false` - Puts the app into fullspace mode.\r\n*\r\n* @example\r\n* <head>\r\n*   <title>My A-Frame Scene</title>\r\n*   <script src=\"https://aframe.io/releases/0.3.0/aframe.min.js\"></script>\r\n*   <script src=\"https://cdn.rawgit.com/AltspaceVR/aframe-altspace-component/vAFRAME_ALTSPACE_VERSION/dist/aframe-altspace-component.min.js\"></script>\r\n* </head>\r\n* <body>\r\n*   <a-scene altspace>\r\n*     <a-entity geometry=\"primitive: box\" material=\"color: #C03546\"></a-entity>\r\n*   </a-scene>\r\n* </body>\r\n*/\r\n'use strict';\r\n\r\nimport {AFrameComponent} from './AFrameComponent';\r\n\r\nexport default class AltspaceComponent extends AFrameComponent\r\n{\r\n\tget version(){\r\n\t\treturn 'AFRAME_ALTSPACE_VERSION';\r\n\t}\r\n\r\n\tget schema(){\r\n\t\treturn {\r\n\t\t\tusePixelScale: { type: 'boolean', default: 'false'},\r\n\t\t\tverticalAlign: { type: 'string',  default: 'middle'},\r\n\t\t\tenclosuresOnly:{ type: 'boolean', default: 'true'},\r\n\t\t\tfullspace:     { type: 'boolean', default: 'false'}\r\n\t\t}\r\n\t}\r\n\r\n\tinit()\r\n\t{\r\n\t\tif(!this.el.object3D instanceof THREE.Scene){\r\n\t\t\tconsole.warn('aframe-altspace-component can only be attached to a-scene');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (window.altspace && window.altspace.inClient) {\r\n\t\t\tthis.el.setAttribute('vr-mode-ui', {enabled: false});\r\n\t\t\tthis.initRenderer();\r\n\t\t\tthis.initCursorEvents();\r\n\t\t\tthis.initCollisionEvents();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn('aframe-altspace-component only works inside of AltspaceVR');\r\n\t\t}\r\n\t}\r\n\r\n\ttick(t, dt)\r\n\t{\r\n\t\tif(this.el.object3D.updateAllBehaviors)\r\n\t\t\tthis.el.object3D.updateAllBehaviors();\r\n\t}\r\n\r\n\t/*\r\n\t* Swap in Altspace renderer when running in AltspaceVR.\r\n\t*/\r\n\tinitRenderer()\r\n\t{\r\n\t\tlet scene = this.el.object3D;\r\n\t\taltspace.getEnclosure().then((e =>\r\n\t\t{\r\n\t\t\tif(this.data.fullspace){\r\n\t\t\t\te.requestFullspace();\r\n\t\t\t\te.addEventListener('fullspacechange', () => {\r\n\t\t\t\t\tscene.scale.setScalar(e.pixelsPerMeter);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.data.usePixelScale || this.data.fullspace){\r\n\t\t\t\tscene.scale.setScalar(e.pixelsPerMeter);\r\n\t\t\t}\r\n\r\n\t\t\tswitch (this.data.verticalAlign) {\r\n\t\t\t\tcase 'bottom':\r\n\t\t\t\t\tscene.position.y -= e.innerHeight / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'top':\r\n\t\t\t\t\tscene.position.y += e.innerHeight / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'middle':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn('Unexpected value for verticalAlign: ', this.data.verticalAlign);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.data.enclosuresOnly && e.innerDepth === 1){\r\n\t\t\t\tthis.el.renderer.render(new THREE.Scene());\r\n\t\t\t\tthis.el.renderer = this.el.effect = oldRenderer;\r\n\r\n\t\t\t}\r\n\t\t}).bind(this));\r\n\r\n\t\tlet oldRenderer = this.el.renderer;\r\n\t\tlet renderer = this.el.renderer = this.el.effect = altspace.getThreeJSRenderer({\r\n\t\t\taframeComponentVersion: this.version\r\n\t\t});\r\n\r\n\t\tlet noop = function() {};\r\n\t\trenderer.setSize = noop;\r\n\t\trenderer.setPixelRatio = noop;\r\n\t\trenderer.setClearColor = noop;\r\n\t\trenderer.clear = noop;\r\n\t\trenderer.enableScissorTest = noop;\r\n\t\trenderer.setScissor = noop;\r\n\t\trenderer.setViewport = noop;\r\n\t\trenderer.getPixelRatio = noop;\r\n\t\trenderer.getMaxAnisotropy = noop;\r\n\t\trenderer.setFaceCulling = noop;\r\n\t\trenderer.context = {canvas: {}};\r\n\t\trenderer.shadowMap = {};\r\n\t}\r\n\r\n\t/*\r\n\t* Emulate A-Frame cursor events when running in AltspaceVR.\r\n\t*/\r\n\tinitCursorEvents()\r\n\t{\r\n\r\n\t\tlet scene = this.el.object3D;\r\n\t\tlet cursorEl = document.querySelector('a-cursor') || document.querySelector('a-entity[cursor]');\r\n\t\tif (cursorEl) {\r\n\t\t\t// Hide A-Frame cursor mesh.\r\n\t\t\tcursorEl.setAttribute('material', 'transparent', true);\r\n\t\t\tcursorEl.setAttribute('material', 'opacity', 0.0);\r\n\t\t}\r\n\r\n\t\tfunction emit(eventName, event)\r\n\t\t{\r\n\t\t\t// Fire events on intersected object and A-Frame cursor.\r\n\t\t\tlet targetEl = event.target.el;\r\n\t\t\tif (cursorEl){\r\n\t\t\t\tcursorEl.emit(eventName, { target: targetEl, ray: event.ray, point: event.point });\r\n\t\t\t}\r\n\r\n\t\t\tif (targetEl){\r\n\t\t\t\ttargetEl.emit(eventName, { target: targetEl, ray: event.ray, point: event.point });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet cursordownObj = null;\r\n\t\tscene.addEventListener('cursordown', event => {\r\n\t\t\tcursordownObj = event.target;\r\n\t\t\temit('mousedown', event);\r\n\t\t});\r\n\r\n\t\tscene.addEventListener('cursorup', event => {\r\n\t\t\temit('mouseup', event);\r\n\t\t\tif (event.target.uuid === cursordownObj.uuid) {\r\n\t\t\t\temit('click', event);\r\n\t\t\t}\r\n\t\t\tcursordownObj = null;\r\n\t\t});\r\n\r\n\t\tscene.addEventListener('cursorenter', event => {\r\n\t\t\tif (!event.target.el){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tevent.target.el.addState('hovered');\r\n\t\t\tif (cursorEl){\r\n\t\t\t\tcursorEl.addState('hovering');\r\n\t\t\t}\r\n\t\t\temit('mouseenter', event);\r\n\t\t});\r\n\r\n\t\tscene.addEventListener('cursorleave', event => {\r\n\t\t\tif (!event.target.el){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tevent.target.el.removeState('hovered');\r\n\t\t\tif (cursorEl){\r\n\t\t\t\tcursorEl.removeState('hovering');\r\n\t\t\t}\r\n\t\t\temit('mouseleave', event);\r\n\t\t});\r\n    }\r\n\r\n\tinitCollisionEvents()\r\n\t{\r\n\t\tlet scene = this.el.object3D;\r\n\r\n\t\tfunction emit(eventName, event)\r\n\t\t{\r\n\t\t\tlet targetEl = event.target.el;\r\n\t\t\tif (!targetEl)\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//remap target and other from object3Ds to aframe element\r\n\t\t\tevent.target = targetEl;\r\n\t\t\tif (event.other && event.other.el) {\r\n\t\t\t\tevent.other = event.other.el;\r\n\t\t\t}\r\n\t\t\ttargetEl.emit(eventName, event);\r\n\t\t};\r\n\r\n\t\tscene.addEventListener('collisionenter', event => {\r\n\t\t\temit('collisionenter', event);\r\n\t\t});\r\n\r\n\t\tscene.addEventListener('collisionexit', event => {\r\n\t\t\temit('collisionexit', event);\r\n\t\t});\r\n\r\n\t\tscene.addEventListener('triggerenter', event => {\r\n\t\t\temit('triggerenter', event);\r\n\t\t});\r\n\r\n\t\tscene.addEventListener('triggerexit', event => {\r\n\t\t\temit('triggerexit', event);\r\n\t\t});\r\n\r\n    }\r\n}\r\n","/**\r\n* Sync the color property of the object between clients.\r\n* Requires both a {@link sync.sync-system} component on the `a-scene`, and a\r\n* {@link sync.sync} component on the target entity.\r\n* @mixin sync-color\r\n* @memberof sync\r\n*/\r\n\r\nimport {AFrameComponent} from './AFrameComponent';\r\n\r\nexport default class SyncColor extends AFrameComponent\r\n{\r\n\tget dependencies(){\r\n\t\treturn ['sync'];\r\n\t}\r\n\r\n\tinit()\r\n\t{\r\n\t\tlet component = this;\r\n\t\tlet sync = component.el.components.sync;\r\n\r\n\t\t// wait for firebase connection to start sync routine\r\n\t\tif(sync.isConnected)\r\n\t\t\tstart();\r\n\t\telse\r\n\t\t\tcomponent.el.addEventListener('connected', start);\r\n\r\n\t\tfunction start()\r\n\t\t{\r\n\t\t\tlet colorRef = sync.dataRef.child('material/color');\r\n\t\t\tlet refChangedLocked = false;\r\n\t\t\tlet firstValue = true;\r\n\r\n\t\t\tcomponent.el.addEventListener('componentchanged', event =>\r\n\t\t\t{\r\n\t\t\t\tlet name = event.detail.name;\r\n\t\t\t\tlet oldData = event.detail.oldData;\r\n\t\t\t\tlet newData = event.detail.newData;\r\n\r\n\t\t\t\tif (name === 'material' && !refChangedLocked && oldData.color !== newData.color && sync.isMine)\r\n\t\t\t\t{\r\n\t\t\t\t\t//For some reason A-Frame has a misconfigured material reference if we do this too early\r\n\t\t\t\t\tsetTimeout(() => colorRef.set(newData.color), 0);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcolorRef.on('value', snapshot => {\r\n\t\t\t\tif(!sync.isMine || firstValue)\r\n\t\t\t\t{\r\n\t\t\t\t\tlet color = snapshot.val();\r\n\r\n\t\t\t\t\trefChangedLocked = true;\r\n\t\t\t\t\tcomponent.el.setAttribute('material', 'color', color);\r\n\t\t\t\t\trefChangedLocked = false;\r\n\r\n\t\t\t\t\tfirstValue = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","'use strict';\r\n\r\nif (typeof AFRAME === 'undefined') {\r\n    throw new Error('Component attempted to register before AFRAME was available.');\r\n}\r\n\r\nimport {registerComponent} from './AFrameComponent';\r\n\r\nimport AltspaceCursorCollider from './AltspaceCursorCollider';\r\nregisterComponent('altspace-cursor-collider', AltspaceCursorCollider);\r\n\r\nimport AltspaceTrackedControls from './AltspaceTrackedControls';\r\nregisterComponent('altspace-tracked-controls', AltspaceTrackedControls);\r\n\r\nimport AltspaceComponent from './AltspaceComponent';\r\nregisterComponent('altspace', AltspaceComponent);\r\n\r\nimport SyncColor from './SyncColor';\r\nregisterComponent('sync-color', SyncColor);\r\n\r\nexport {AltspaceCursorCollider};\r\n"],"names":["flatten","obj","let","ret","prototype","Object","assign","schema","dependencies","push","ref","registerComponent","name","cls","AFRAME","safeDeepSet","keys","value","length","slice","AFrameComponent","prototypeAccessors","init","update","oldData","remove","tick","time","timeDelta","pause","play","updateSchema","data","AltspaceCursorCollider","enabled","type","default","this","setColliderFlag","el","addEventListener","bind","state","object3D","console","log","userData","traverse","subobj","THREE","Mesh","AltspaceTrackedControls","gamepadIndex","trackedControlsSystem","document","querySelector","systems","systemGamepads","altspace","getGamepads","controllers","window","components","hand","controller","setAttribute","id","AltspaceComponent","version","usePixelScale","verticalAlign","enclosuresOnly","fullspace","Scene","warn","inClient","initRenderer","initCursorEvents","initCollisionEvents","t","dt","updateAllBehaviors","scene","getEnclosure","then","e","requestFullspace","scale","setScalar","pixelsPerMeter","position","y","innerHeight","innerDepth","renderer","render","effect","oldRenderer","getThreeJSRenderer","aframeComponentVersion","noop","setSize","setPixelRatio","setClearColor","clear","enableScissorTest","setScissor","setViewport","getPixelRatio","getMaxAnisotropy","setFaceCulling","context","canvas","shadowMap","emit","eventName","event","targetEl","target","cursorEl","ray","point","cursordownObj","uuid","addState","removeState","other","SyncColor","start","colorRef","sync","dataRef","child","refChangedLocked","firstValue","component","detail","newData","color","isMine","setTimeout","set","on","snapshot","val","isConnected","Error"],"mappings":"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"}