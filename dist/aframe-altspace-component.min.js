!function(e){"use strict";function t(e){var n={};return n=e.prototype?Object.assign(t(e.prototype),e):Object.assign({schema:{},dependencies:[]},e),e.schema&&Object.assign(n.schema,e.schema),e.dependencies&&(o=n.dependencies).push.apply(o,e.dependencies),n;var o}function n(e,n){AFRAME.registerComponent(e,t(n))}function o(e,t,n){return 0===t.length?n:(e[t[0]]=o(e[t[0]]||{},t.slice(1),n),e)}var r=function(){},a={schema:{}};a.schema.get=function(){return null},r.prototype.init=function(){},r.prototype.update=function(e){},r.prototype.remove=function(){},r.prototype.tick=function(e,t){},r.prototype.pause=function(){},r.prototype.play=function(){},r.prototype.updateSchema=function(e){},Object.defineProperties(r.prototype,a);var i=function(e){function t(){e.apply(this,arguments)}e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t;var n={schema:{}};return n.schema.get=function(){return{enabled:{type:"boolean",default:"true"}}},t.prototype.init=function(){var e=this;this.setColliderFlag(this.data.enabled),this.el.addEventListener("model-loaded",function(){e.setColliderFlag(e.data.enabled)}.bind(this))},t.prototype.update=function(){this.setColliderFlag(this.data.enabled)},t.prototype.setColliderFlag=function(e){var t=this.el.object3D;t&&(console.log("Setting collider flag to",e),o(t.userData,["altspace","collider","enabled"],e),t.traverse(function(t){t instanceof THREE.Mesh&&o(t.userData,["altspace","collider","enabled"],e)}))},Object.defineProperties(t.prototype,n),t}(r),s=function(e){function t(){e.apply(this,arguments)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.init=function(){this.gamepadIndex=null,this.trackedControlsSystem=document.querySelector("a-scene").systems["tracked-controls"],this.systemGamepads=0,altspace.getGamepads()},t.prototype.tick=function(){if(this.trackedControlsSystem&&this.systemGamepads!==this.trackedControlsSystem.controllers.length&&window.altspace&&altspace.getGamepads&&altspace.getGamepads().length){var e=this.el.components;e["paint-controls"]&&(this.gamepadIndex="left"===e["paint-controls"].data.hand?2:1),null===this.gamepadIndex&&e["hand-controls"]&&(this.gamepadIndex="left"===e["hand-controls"].data?2:1),null===this.gamepadIndex&&e["vive-controls"]&&(this.gamepadIndex="left"===e["vive-controls"].data.hand?2:1),null===this.gamepadIndex&&e["tracked-controls"]&&(this.gamepadIndex=e["tracked-controls"].data.controller),this.el.setAttribute("tracked-controls","id",altspace.getGamepads()[this.gamepadIndex].id),this.el.setAttribute("tracked-controls","controller",0),this.systemGamepads=this.trackedControlsSystem.controllers.length}},t}(r),c=function(e){function t(){e.apply(this,arguments)}e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t;var n={version:{},schema:{}};return n.version.get=function(){return"AFRAME_ALTSPACE_VERSION"},n.schema.get=function(){return{usePixelScale:{type:"boolean",default:"false"},verticalAlign:{type:"string",default:"middle"},enclosuresOnly:{type:"boolean",default:"true"},fullspace:{type:"boolean",default:"false"}}},t.prototype.init=function(){return!this.el.object3D instanceof THREE.Scene?void console.warn("aframe-altspace-component can only be attached to a-scene"):void(window.altspace&&window.altspace.inClient?(this.el.setAttribute("vr-mode-ui",{enabled:!1}),this.initRenderer(),this.initCursorEvents(),this.initCollisionEvents()):console.warn("aframe-altspace-component only works inside of AltspaceVR"))},t.prototype.tick=function(e,t){this.el.object3D.updateAllBehaviors&&this.el.object3D.updateAllBehaviors()},t.prototype.initRenderer=function(){var e=this,t=this.el.object3D;altspace.getEnclosure().then(function(o){switch(e.data.fullspace&&(o.requestFullspace(),o.addEventListener("fullspacechange",function(){t.scale.setScalar(o.pixelsPerMeter)})),e.data.usePixelScale&&!e.data.fullspace||t.scale.setScalar(o.pixelsPerMeter),e.data.verticalAlign){case"bottom":t.position.y-=o.innerHeight/2;break;case"top":t.position.y+=o.innerHeight/2;break;case"middle":break;default:console.warn("Unexpected value for verticalAlign: ",e.data.verticalAlign)}e.data.enclosuresOnly&&1===o.innerDepth&&(e.el.renderer.render(new THREE.Scene),e.el.renderer=e.el.effect=n)}.bind(this));var n=this.el.renderer,o=this.el.renderer=this.el.effect=altspace.getThreeJSRenderer({aframeComponentVersion:this.version}),r=function(){};o.setSize=r,o.setPixelRatio=r,o.setClearColor=r,o.clear=r,o.enableScissorTest=r,o.setScissor=r,o.setViewport=r,o.getPixelRatio=r,o.getMaxAnisotropy=r,o.setFaceCulling=r,o.context={canvas:{}},o.shadowMap={}},t.prototype.initCursorEvents=function(){function e(e,t){var o=t.target.el;n&&n.emit(e,{target:o,ray:t.ray,point:t.point}),o&&o.emit(e,{target:o,ray:t.ray,point:t.point})}var t=this.el.object3D,n=document.querySelector("a-cursor")||document.querySelector("a-entity[cursor]");n&&(n.setAttribute("material","transparent",!0),n.setAttribute("material","opacity",0));var o=null;t.addEventListener("cursordown",function(t){o=t.target,e("mousedown",t)}),t.addEventListener("cursorup",function(t){e("mouseup",t),t.target.uuid===o.uuid&&e("click",t),o=null}),t.addEventListener("cursorenter",function(t){t.target.el&&(t.target.el.addState("hovered"),n&&n.addState("hovering"),e("mouseenter",t))}),t.addEventListener("cursorleave",function(t){t.target.el&&(t.target.el.removeState("hovered"),n&&n.removeState("hovering"),e("mouseleave",t))})},t.prototype.initCollisionEvents=function(){function e(e,t){var n=t.target.el;n&&(t.target=n,t.other&&t.other.el&&(t.other=t.other.el),n.emit(e,t))}var t=this.el.object3D;t.addEventListener("collisionenter",function(t){e("collisionenter",t)}),t.addEventListener("collisionexit",function(t){e("collisionexit",t)}),t.addEventListener("triggerenter",function(t){e("triggerenter",t)}),t.addEventListener("triggerexit",function(t){e("triggerexit",t)})},Object.defineProperties(t.prototype,n),t}(r),l=function(e){function t(){e.apply(this,arguments)}e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t;var n={dependencies:{}};return n.dependencies.get=function(){return["sync"]},t.prototype.init=function(){function e(){var e=n.dataRef.child("material/color"),o=!1,r=!0;t.el.addEventListener("componentchanged",function(t){var r=t.detail.name,a=t.detail.oldData,i=t.detail.newData;"material"===r&&!o&&a.color!==i.color&&n.isMine&&setTimeout(function(){return e.set(i.color)},0)}),e.on("value",function(e){if(!n.isMine||r){var a=e.val();o=!0,t.el.setAttribute("material","color",a),o=!1,r=!1}})}var t=this,n=t.el.components.sync;n.isConnected?e():t.el.addEventListener("connected",e)},Object.defineProperties(t.prototype,n),t}(r);if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");n("altspace-cursor-collider",i),n("altspace-tracked-controls",s),n("altspace",c),n("sync-color",l),e.AltspaceCursorCollider=i}(this.altspace=this.altspace||{});
//# sourceMappingURL=aframe-altspace-component.min.js.map
