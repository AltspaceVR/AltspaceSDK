!function(t){"use strict";function e(t){var o={};return o=t.prototype?Object.assign(e(t.prototype),t):Object.assign({schema:{}},t),Object.assign(o.schema,t.schema),o}function o(t,o){AFRAME.registerComponent(t,e(o))}function a(t,e,o){return 0===e.length?o:(t[e[0]]=a(t[e[0]]||{},e.slice(1),o),t)}var n=function(){},s={schema:{}};s.schema.get=function(){return null},n.prototype.init=function(){},n.prototype.update=function(t){},n.prototype.remove=function(){},n.prototype.tick=function(t,e){},n.prototype.pause=function(){},n.prototype.play=function(){},n.prototype.updateSchema=function(t){},Object.defineProperties(n.prototype,s);var r=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var o={schema:{}};return o.schema.get=function(){return{enabled:{type:"boolean",default:"true"}}},e.prototype.init=function(){var t=this;this.setColliderFlag(this.data.enabled),this.el.addEventListener("model-loaded",function(){t.setColliderFlag(t.data.enabled)}.bind(this))},e.prototype.update=function(){this.setColliderFlag(this.data.enabled)},e.prototype.setColliderFlag=function(t){var e=this.el.object3D;e&&(console.log("Setting collider flag to",t),a(e.userData,["altspace","collider","enabled"],t),e.traverse(function(e){e instanceof THREE.Mesh&&a(e.userData,["altspace","collider","enabled"],t)}))},Object.defineProperties(e.prototype,o),e}(n),i=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.init=function(){this.gamepadIndex=null,this.trackedControlsSystem=document.querySelector("a-scene").systems["tracked-controls"],this.systemGamepads=0,altspace.getGamepads()},e.prototype.tick=function(){if(this.trackedControlsSystem&&this.systemGamepads!==this.trackedControlsSystem.controllers.length&&window.altspace&&altspace.getGamepads&&altspace.getGamepads().length){var t=this.el.components;t["paint-controls"]&&(this.gamepadIndex="left"===t["paint-controls"].data.hand?2:1),null===this.gamepadIndex&&t["hand-controls"]&&(this.gamepadIndex="left"===t["hand-controls"].data?2:1),null===this.gamepadIndex&&t["vive-controls"]&&(this.gamepadIndex="left"===t["vive-controls"].data.hand?2:1),null===this.gamepadIndex&&t["tracked-controls"]&&(this.gamepadIndex=t["tracked-controls"].data.controller),this.el.setAttribute("tracked-controls","id",altspace.getGamepads()[this.gamepadIndex].id),this.el.setAttribute("tracked-controls","controller",0),this.systemGamepads=this.trackedControlsSystem.controllers.length}},e}(n);if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");o("altspace-cursor-collider",r),o("altspace-tracked-controls",i),t.AltspaceCursorCollider=r}(this.altspace=this.altspace||{});
//# sourceMappingURL=aframe-altspace-component.min.js.map
