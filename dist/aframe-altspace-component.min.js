!function(t){"use strict";function e(t){return t.__proto__?Object.assign(e(t.__proto__),t):Object.assign({},t)}function o(t,e,n){return 0===e.length?n:(t[e[0]]=o(t[e[0]]||{},e.slice(1),n),t)}var n=function(){this.schema=null};n.prototype.init=function(){},n.prototype.update=function(t){},n.prototype.remove=function(){},n.prototype.tick=function(t,e){},n.prototype.pause=function(){},n.prototype.play=function(){},n.prototype.updateSchema=function(t){},n.prototype.register=function(t){AFRAME.registerComponent(t,e(this))};var r=function(t){function e(){this.schema={enabled:{type:"boolean",default:"true"}}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.init=function(){var t=this;this.setColliderFlag(this.data.enabled),this.el.addEventListener("model-loaded",function(){t.setColliderFlag(t.data.enabled)}.bind(this))},e.prototype.update=function(){this.setColliderFlag(this.data.enabled)},e.prototype.setColliderFlag=function(t){var e=this.el.object3D;e&&(console.log("Setting collider flag to",t),o(e.userData,["altspace","collider","enabled"],t),e.traverse(function(e){e instanceof THREE.Mesh&&o(e.userData,["altspace","collider","enabled"],t)}))},e}(n);if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");(new r).register("altspace-cursor-collider"),t.AltspaceCursorCollider=r}(this.aframe_altspace=this.aframe_altspace||{});
//# sourceMappingURL=aframe-altspace-component.min.js.map
